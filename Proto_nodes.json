[{"id":"f719dea.686f42","type":"tab","label":"Proto-nodes","disabled":false,"info":"Node-RED kit for 3D Repo."},{"id":"fd065e0c.a8d8d8","type":"inject","z":"f719dea.686f42","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":179.70834350585938,"y":721.6667404174805,"wires":[["aa1cb5a.88c9948"]]},{"id":"613f57aa.b8d468","type":"function","z":"f719dea.686f42","name":"API call","func":"cookie = flow.get(\"cookie\");\nvar calls = [];\n\nmsg.headers = {\n    \"content-type\": \"application/json\",\n    \"Cookie\": cookie\n};\n\nif(msg.inputs.allRev){\n    try{\n        var test = flow.get(\"revisions\").length;\n    }catch(error){\n        node.error(\"Missing revisions\", msg);\n        return;\n    }\n    for (var i = 0; i < flow.get(\"revisions\").length; i++) {\n        for (var prop in msg.inputs.filter) {\n            calls.push(\"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + flow.get(\"revisions\")[i]._id + \"/meta/findObjsWith/\" + prop + \".json\");\n        }\n    }\n}else{\n    for (var prop in msg.inputs.filter) {\n        calls.push(\"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/master/head/meta/findObjsWith/\" + prop + \".json\");\n    }\n}\n\nmsg.payload = calls;\n\nreturn msg;","outputs":"1","noerr":0,"x":1051.3751220703125,"y":226.11115264892578,"wires":[["f8d8b0c2.6da5c"]]},{"id":"f8d8b0c2.6da5c","type":"split","z":"f719dea.686f42","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1055.520263671875,"y":274.28382110595703,"wires":[["d3ded0c6.eef35"]]},{"id":"d3ded0c6.eef35","type":"http request","z":"f719dea.686f42","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":1048.0723876953125,"y":326.24925994873047,"wires":[["3b7e6626.205db2"]]},{"id":"3b7e6626.205db2","type":"join","z":"f719dea.686f42","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","x":1051.779052734375,"y":374.6322250366211,"wires":[["4490bde2.7bb7bc"]]},{"id":"aa1cb5a.88c9948","type":"function","z":"f719dea.686f42","name":"MAIN INPUTS","func":"// INPUTS\n\nteamspace = \"***\";  // make sure you have permissions to acces this teamspace\nmodelID = \"***\";    // make sure you have permissions to acces this model or federation\n\n\n// ignore the rest\n\ntry{\n    flow.set(\"teamspace\", teamspace);\n}catch(error){\n    node.error(\"Missing teamspace\", msg);\n    return;\n}\ntry{\n    flow.set(\"modelID\", modelID);\n}catch(error){\n    node.error(\"Missing modelID\", msg);\n    return;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":212.42483520507812,"y":563.7339401245117,"wires":[[]]},{"id":"c4098ed5.b32c68","type":"http request","z":"f719dea.686f42","name":"","method":"POST","ret":"obj","url":"{{{topic}}}","tls":"","x":446.9478759765625,"y":255.23261260986328,"wires":[["16ec9985.96a9fe"]]},{"id":"16ec9985.96a9fe","type":"function","z":"f719dea.686f42","name":"cookie","func":"var cookies = msg.responseCookies;\n\ntry{\n    cookies[\"connect.sid\"];\n}catch(error){\n    node.error(\"Invalid username or password\", msg);\n    return;\n}\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": \"connect.sid=\" + cookies[\"connect.sid\"][\"value\"]\n};\n\nflow.set(\"cookie\",msg.headers[\"Cookie\"]);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":449.5035400390625,"y":306.98453521728516,"wires":[[]]},{"id":"c9ddaf73.9bed9","type":"function","z":"f719dea.686f42","name":"header","func":"try{\n    test = global.get(\"username\")[0];\n}catch(error){\n    node.error(\"Login error - login at http://localhost:1880/ui/#/0\", msg);\n    return;\n}\ntry{\n    test = global.get(\"password\")[0];\n}catch(error){\n    node.error(\"Login error - login at http://localhost:1880/ui/#/0\", msg);\n    return;\n}\n\n\nmsg.payload = {\n \"username\": global.get(\"username\"), \n \"password\": global.get(\"password\")\n};\n\nmsg.topic = \"https://api1.www.3drepo.io/api/login\";\n\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;","outputs":1,"noerr":0,"x":448.9081115722656,"y":206.37049865722656,"wires":[["c4098ed5.b32c68"]]},{"id":"73ab8bb4.dc095c","type":"function","z":"f719dea.686f42","name":"merge","func":"if(msg.inputs.allRev){\n    revisions = flow.get(\"revisions\");\n    merged = [];\n    \n    // partition API call results by revision\n    var rev = []\n    while (msg.payload.length > 0) {\n        rev.push(msg.payload.splice(0, Object.keys(msg.inputs.filter).length)); // this works\n    }\n\n    // get meta GUIDs, IFC GUIDs\n    for (var i = 0; i < rev.length; i++) {\n        merged[i] = [];\n        for (var j in rev[i][0][\"data\"]) {      // IfcGUID\n            for (var l = 1; l < rev[i].length; l++) {       // loop through filter\n                var property = Object.keys(msg.inputs.filter)[l];\n                var filter = msg.inputs.filter[Object.keys(msg.inputs.filter)[l]];\n                for (var k in rev[i][l][\"data\"]) {\n                    // if (rev[i][1][\"data\"][j] !== undefined && rev[i][0][\"data\"][j][\"_id\"] === rev[i][1][\"data\"][k][\"_id\"]) {\n                    if (rev[i][0][\"data\"][j][\"_id\"] === rev[i][l][\"data\"][k][\"_id\"]) {      // if meta IDs match create filtered object\n                        o = {};\n                        o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                        o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                        o.property = property;\n                        o.value = rev[i][l][\"data\"][k][\"metadata\"][\"value\"];\n                        o.timestamp = Date.parse(revisions[i].timestamp);\n                        o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                        o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                        merged[i].push(o)\n                    }\n                }\n            }\n        }\n    }\n    msg.payload = merged;\n    return msg;\n}else{\n    try{\n        var timestamp = Date.parse(flow.get(\"revisions\")[0].timestamp);\n    }catch(error){\n        node.error(\"Missing revisions\", msg);\n    return;\n    }\n    \n    merged = [];\n    \n    // partition API call results by revision\n    var rev = []\n    while (msg.payload.length > 0) {\n        rev.push(msg.payload.splice(0, Object.keys(msg.inputs.filter).length)); // this works\n    }\n    // node.send({payload:rev})\n    // get meta GUIDs, IFC GUIDs\n    for (var i = 0; i < rev.length; i++) {\n        merged[i] = [];\n        for (var j in rev[i][0][\"data\"]) {      // IfcGUID\n            for (var l = 1; l < rev[i].length; l++) {       // loop through filtered\n                var property = Object.keys(msg.inputs.filter)[l];\n                var filter = msg.inputs.filter[Object.keys(msg.inputs.filter)[l]];\n                for (var k in rev[i][l][\"data\"]) {\n                    var value = rev[i][l][\"data\"][k][\"metadata\"][\"value\"];\n                    \n                    // if (rev[i][1][\"data\"][j] !== undefined && rev[i][0][\"data\"][j][\"_id\"] === rev[i][1][\"data\"][k][\"_id\"]) {\n                    if (rev[i][0][\"data\"][j][\"_id\"] === rev[i][l][\"data\"][k][\"_id\"]) {      // if meta IDs match create filtered object\n                        \n                        if (filter.length === 0){\n                            o = {};\n                            o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                            o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                            o.property = property;\n                            o.value = value;\n                            o.timestamp = timestamp;\n                            o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                            o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                            merged[i].push(o)\n                        }else{\n                            if(filter[0] === true && value.search(filter[1]) > -1){\n                                o = {};\n                                o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                                o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                                o.property = property;\n                                o.value = value;\n                                o.timestamp = timestamp;\n                                o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                                o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                                merged[i].push(o);\n                            }else{\n                                // node.send({payload:value})\n                                for(var m=1; m<filter.length; m++){\n                                    if(filter[m] === value){\n                                    o = {};\n                                    o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                                    o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                                    o.property = property;\n                                    o.value = value;\n                                    o.timestamp = timestamp;\n                                    o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                                    o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                                    merged[i].push(o);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    msg.payload = merged;\n    return msg;\n}\n\n","outputs":1,"noerr":0,"x":1053.9129333496094,"y":474.2490539550781,"wires":[[]]},{"id":"7a6ca922.aca358","type":"function","z":"f719dea.686f42","name":"ID map call","func":"cookie = flow.get(\"cookie\");\n\ntry{\n    revID = flow.get(\"revisions\")[0]._id;\n}catch(error){\n    node.error(\"Missing revisions\", msg);\n    return;\n}\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + revID + \"/idmap.json\";\n\nreturn msg;\n","outputs":1,"noerr":0,"x":726.718282699585,"y":490.0550651550293,"wires":[["404eb0d6.a9ad58"]]},{"id":"404eb0d6.a9ad58","type":"http request","z":"f719dea.686f42","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":726.99169921875,"y":543.5862426757812,"wires":[["cb89078d.3425a"]]},{"id":"98715533.bb0588","type":"function","z":"f719dea.686f42","name":"meta diff","func":"function metaDiff(current, arrayOfPrevious){\n    GUIDs = [];\n    metaIDs = [];\n    for(var i=0; i<current.length; i++){\n        for(var j =0; j<arrayOfPrevious.length; j++){\n            for(var k=0; k<arrayOfPrevious[j].length; k++){\n                if(current[i].IFCGUID === arrayOfPrevious[j][k].IFCGUID){\n                    if(current[i].value != arrayOfPrevious[j][k].value){\n                        if(metaIDs.indexOf(current[i].metaID != -1)){       //can't get rid of duplicates, array>set>array workaround\n                            metaIDs.push(current[i].metaID)\n                            for(var l=0; l<current[i].parents.length; l++){\n                                if(GUIDs.indexOf(current[i].parents[l] != -1)){\n                                    GUIDs.push(current[i].parents[l]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    metaIDs = new Set(metaIDs);\n    metaIDs = Array.from(metaIDs);\n    GUIDs = new Set(GUIDs);\n    GUIDs = Array.from(GUIDs);\n    return [metaIDs, GUIDs];\n}\n\nmd = metaDiff(msg.payload[0], msg.payload.slice(1));\n\nmsg.payload = md[1];\n\nreturn msg;","outputs":1,"noerr":0,"x":1354.3411865234375,"y":432.89544677734375,"wires":[["a0dd60aa.5cf528"]]},{"id":"7383a908.957b08","type":"function","z":"f719dea.686f42","name":"revisions API","func":"cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/\" + \"revisions.json\"\n\nreturn msg;","outputs":1,"noerr":0,"x":732.4584197998047,"y":203.74657726287842,"wires":[["369f2490.499584"]]},{"id":"369f2490.499584","type":"http request","z":"f719dea.686f42","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":732.4480133056641,"y":253.22572708129883,"wires":[["41125072.02119"]]},{"id":"41125072.02119","type":"function","z":"f719dea.686f42","name":"OUTPUTS","func":"// all revisions\n\nflow.set(\"revisions\", msg.payload);\n\n\n// uncomment and specify subset of revisions below\n\n// flow.set(\"revisions\", msg.payload.slice(0,10));\n","outputs":1,"noerr":0,"x":743.4549560546875,"y":301.96881103515625,"wires":[[]]},{"id":"3f644b23.c431ac","type":"ui_chart","z":"f719dea.686f42","name":"value tracker","group":"7063e980.1768f8","order":2,"width":0,"height":0,"label":"value tracker","chartType":"line","legend":"false","xformat":"D/M","interpolate":"step","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1354.8873291015625,"y":263.25392150878906,"wires":[[],[]]},{"id":"45dcac32.425e84","type":"function","z":"f719dea.686f42","name":"format","func":"m = {};\ndata = [];\n\nfor(var k=0; k<msg.inputs.trackIDs.length; k++){\n    data[k] = [];\n    for(var i=0; i<msg.payload.length; i++){    // revisions\n        for(var j=0; j<msg.payload[i].length; j++){     // results in revision\n            if(msg.payload[i][j] !== undefined){\n                if(msg.payload[i][j].IFCGUID == msg.inputs.trackIDs[k]){   // set trackIDs in INPUT node\n                    o = {};\n                    o.x = msg.payload[i][j].timestamp;\n                    o.y = msg.payload[i][j].value;\n                    data[k].push(o);\n                }\n            }\n        }\n    }\n}\n\nm.labels = [\"a\"];\nm.series = msg.inputs.trackIDs;\nm.data = data;\n\nreturn {payload:[m]};","outputs":1,"noerr":0,"x":1353.776116265191,"y":215.476202223036,"wires":[["3f644b23.c431ac"]]},{"id":"f621a9aa.324988","type":"comment","z":"f719dea.686f42","name":"revisions","info":"get all revisions of a model\n\nto choose only subset of revisions use:\nmsg.payload.slice(0,3)\n\nplace after login","x":734.7084197998047,"y":157.22227001190186,"wires":[]},{"id":"c5493432.77b8c8","type":"comment","z":"f719dea.686f42","name":"value tracker","info":"set tracker on model not federation\n\nfilter has only 2 inputs:\n- IFC GUID\n- required metadata field\n- all revisions enabled","x":1352.347649468316,"y":138.33339521620007,"wires":[]},{"id":"1beee3a4.fcaebc","type":"comment","z":"f719dea.686f42","name":"meta diff","info":"difference metadata on model not federation\n\nfilter has only 2 inputs:\n- IFC GUID\n- required metadata field\n- all revisions enabled","x":1350.3634033203125,"y":380.4166564941406,"wires":[]},{"id":"7aac500d.fbe87","type":"comment","z":"f719dea.686f42","name":"filter","info":"keep Ifc GUID always as first item","x":1046.9307250976562,"y":135.00003814697266,"wires":[]},{"id":"af53d448.98ef28","type":"comment","z":"f719dea.686f42","name":"login","info":"","x":450.8194580078125,"y":159.44444274902344,"wires":[]},{"id":"3d200d5f.393cfa","type":"function","z":"f719dea.686f42","name":"all meta IDs","func":"teamspace = flow.get(\"teamspace\");\n\nallMeta = [];\n\nif (msg.payload.subModels !== undefined) {\n    for (var i = 0; i < msg.payload.subModels.length; i++) {\n        for (var j = 0; j < msg.payload.subModels[i].data.length; j++) {\n            allMeta.push(msg.payload.subModels[i].data[j]._id)\n        }\n    }\n}else{\n    for(var i in msg.payload.data){\n        allMeta.push(msg.payload.data[i]._id)\n    }\n}\n\nvar allMeta = new Set([].concat(...allMeta));\nallMeta = Array.from(allMeta);\n\nflow.set(\"allMeta\", allMeta);\n\nreturn {payload:allMeta};","outputs":1,"noerr":0,"x":460.3431396484375,"y":617.77783203125,"wires":[[]]},{"id":"b2c213eb.f479d","type":"http request","z":"f719dea.686f42","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":463.2003173828125,"y":567.9365844726562,"wires":[["3d200d5f.393cfa"]]},{"id":"3286b7dc.ecc34","type":"function","z":"f719dea.686f42","name":"all meta call","func":"cookie = flow.get(\"cookie\");\n\ntry{\n    revID = flow.get(\"revisions\")[0]._id;\n}catch(error){\n    node.error(\"Missing revisions\", msg);\n    return;\n}\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + revID + \"/meta/all.json\";\n\nreturn msg;","outputs":"1","noerr":0,"x":465.263916015625,"y":517.6826171875,"wires":[["b2c213eb.f479d"]]},{"id":"755a7814.d9dc2","type":"comment","z":"f719dea.686f42","name":"all meta","info":"retrieve all metadata in model or federation","x":468.04168701171875,"y":467.77789306640625,"wires":[]},{"id":"1f67fc14.0b4634","type":"file in","z":"f719dea.686f42","name":"validate.csv","filename":"E:\\***\\validate.csv","format":"utf8","chunk":false,"sendError":false,"x":444.29168701171875,"y":769.9998168945312,"wires":[["b19e3078.85fae"]]},{"id":"b19e3078.85fae","type":"csv","z":"f719dea.686f42","name":"","sep":",","hdrin":"","hdrout":"","multi":"mult","ret":"\\n","temp":"","x":447.6250915527344,"y":820.0001220703125,"wires":[["8b2c3548.5ea9a8"]]},{"id":"8b2c3548.5ea9a8","type":"function","z":"f719dea.686f42","name":"set validate","func":"flow.set(\"validate\", msg.payload);\n","outputs":1,"noerr":0,"x":453.1806945800781,"y":867.7779541015625,"wires":[[]]},{"id":"974d0889.91082","type":"http response","z":"f719dea.686f42","name":"","statusCode":"","headers":{},"x":1658.5972595214844,"y":833.6113204956055,"wires":[]},{"id":"67c14232.c9a834","type":"function","z":"f719dea.686f42","name":"create issue API call","func":"var issue = {};\nvar viewpoint = {};\n\nissue.name = msg.inputs.issueName;\nissue.desc =  msg.inputs.desc;\nissue.account = flow.get(\"username\");\nissue.assigned_roles = [];\nissue.creator_role = \"Client\";\nissue.group_id = msg.payload._id;\nissue.model = flow.get(\"modelID\");\nissue.objectId = null;\nissue.pickedNorm = null;\nissue.pickedPos = null;\nissue.priority = \"none\";\nissue.rev_id = null;\nissue.scale = 1;\nissue.status = \"open\";\nissue.topic_type = \"for_information\";\n\nviewpoint.screenshot = \"\";\n\nissue.viewpoint = viewpoint;\n\nvar cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": cookie\n};\n\nmsg.topic = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/issues.json\";\n\nmsg.payload = issue;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":1647.5719299316406,"y":735.029167175293,"wires":[["173cac90.3b7083"]]},{"id":"173cac90.3b7083","type":"http request","z":"f719dea.686f42","name":"","method":"POST","ret":"obj","url":"{{{topic}}}","tls":"","x":1654.9885559082031,"y":782.9490280151367,"wires":[["974d0889.91082"]]},{"id":"c4b8daba.a7d6b","type":"comment","z":"f719dea.686f42","name":"create issue","info":"","x":1649.2107238769531,"y":642.1843795776367,"wires":[]},{"id":"f5ec9e1e.7c99","type":"http request","z":"f719dea.686f42","name":"","method":"POST","ret":"obj","url":"{{{topic}}}","tls":"","x":1372.823486328125,"y":808.755615234375,"wires":[[]]},{"id":"cde1238c.43e28","type":"function","z":"f719dea.686f42","name":"group API call","func":"var cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": cookie\n};\n\nmsg.topic = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/groups\";\n\nvar group = {};\ngroup.name = \"filtered\";\ngroup.color = [255,0,0];\ngroup.objects = msg.payload;\n\nmsg.payload = group;\n\nreturn msg;","outputs":1,"noerr":0,"x":1371.526123046875,"y":753.9468383789062,"wires":[["f5ec9e1e.7c99"]]},{"id":"2a1313e4.e20fdc","type":"comment","z":"f719dea.686f42","name":"data validation","info":"Inputs:\n- validate.csv with required fields and values\n- list of IFC types to exclude","x":730.9586181640625,"y":718.1943969726562,"wires":[]},{"id":"4490bde2.7bb7bc","type":"function","z":"f719dea.686f42","name":"if fed (filters)","func":"var o = [];\n\nfor (var i=0; i < msg.payload.length; i++) {\n    if (msg.payload[i] !== undefined) {\n        if (msg.payload[i].subModels !== undefined) {\n            var obj = {};\n            var temp = [];\n            for (var j = 0; j < msg.payload[i].subModels.length; j++) {\n                for (var k = 0; k < msg.payload[i].subModels[j].data.length; k++) {\n                    // merge data arrays as per API calls \n                    temp.push(msg.payload[i].subModels[j].data[k])\n                }\n            }\n            obj.data = temp;\n            o.push(obj);\n        } else {\n            return msg;\n        }\n    }\n}\n\nmsg.payload = o;\n\nreturn msg","outputs":1,"noerr":0,"x":1047.06982421875,"y":424.1666564941406,"wires":[["73ab8bb4.dc095c"]]},{"id":"1eeb7438.22a1a4","type":"function","z":"f719dea.686f42","name":"if fed (meta)","func":"var o = [];\n\nif(Array.isArray(msg.payload)){\n    for (var i=0; i < msg.payload.length; i++) {\n        if (msg.payload[i] !== undefined) {\n            if (msg.payload[i].subModels !== undefined) {\n                var obj = {};\n                obj.data = [];\n                for (var j = 0; j < msg.payload[i].subModels.length; j++) {\n                    for (var k = 0; k < msg.payload[i].subModels[j].data.length; k++) {\n                        // merge data arrays as per API calls \n                        obj.data.push(msg.payload[i].subModels[j].data[k])\n                    }\n                }\n                // obj.data = temp;\n                o.push(obj);\n            } else {\n                return msg;\n            }\n        }\n    }\n}else{\n    if (msg.payload !== undefined) {\n        if (msg.payload.subModels !== undefined) {\n            var obj = {};\n            obj.data = [];\n            for (var j = 0; j < msg.payload.subModels.length; j++) {\n                for (var k = 0; k < msg.payload.subModels[j].data.length; k++) {\n                    // merge data arrays as per API calls \n                    obj.data.push(msg.payload.subModels[j].data[k])\n                }\n            }\n        } else {\n            return msg;\n        }\n    }\n    msg.payload = obj;\n    return msg\n}\n\n\n","outputs":1,"noerr":0,"x":732.0696411132812,"y":831.3889770507812,"wires":[["e6f28c79.448af"]]},{"id":"e6f28c79.448af","type":"function","z":"f719dea.686f42","name":"validate","func":"validate = flow.get(\"validate\");\n\ntry{\n    test = validate.length;\n}catch(error){\n    node.error(\"Missing validatation data\", msg);\n    return;\n}\n\nvalid = [];\ninvalid = [];\n\nfor(var i=0; i<msg.payload.data.length; i++){   // loop through all meta objects\n    if(msg.inputs.exclude.indexOf(msg.payload.data[i].metadata[\"IFC Type\"]) === -1){   // excluding types\n        var hasField = true;\n        var isCorrect = true;\n        for(var j=0; j<validate.length; j++){       // loop through validation spreadsheet\n            param = String(validate[j].col1).replace(/[^\\x00-\\x7F]/g, \"\");      // ASCI characters only, in case something dodgy comes from the spreadsheet\n            if(Object.keys(msg.payload.data[i].metadata).indexOf(param) === -1){    // check field\n                hasField = false;\n            }else{\n                if(msg.inputs.checkValue){\n                    value = String(validate[j].col2).replace(/[^\\x00-\\x7F]/g, \"\");      // ASCI characters only, in case something dodgy comes from the spreadsheet\n                    node.send({payload:msg.payload.data[i].metadata[param]})\n                    if(msg.payload.data[i].metadata[param] != value){      // check value\n                        isCorrect = false;\n                    }\n                }\n            }\n        }\n        if(hasField && isCorrect){  \n            for(var k=0; k<msg.payload.data[i].parents.length; k++){\n                valid.push(msg.payload.data[i].parents[k]); \n            }\n        }else{\n            for(var k=0; k<msg.payload.data[i].parents.length; k++){\n                invalid.push(msg.payload.data[i].parents[k]);\n            }\n        }\n    }\n}\n\nreturn [{payload:valid},{payload:invalid}];\n","outputs":"2","noerr":0,"x":735.393798828125,"y":890.5186157226562,"wires":[[],["6b7440c0.52433"]],"outputLabels":["valid","invalid"]},{"id":"6b79a6ba.2af6a","type":"comment","z":"f719dea.686f42","name":"read csv","info":"","x":452.58795166015625,"y":718.926025390625,"wires":[]},{"id":"3f465962.515a9e","type":"ui_text_input","z":"f719dea.686f42","name":"","label":"Username","group":"d73d915b.3ae9b","order":1,"width":0,"height":0,"passthru":false,"mode":"text","delay":300,"topic":"","x":199.560302734375,"y":204.2963638305664,"wires":[["7c016b9.cdaa494"]]},{"id":"f58ec06b.fe1c5","type":"ui_text_input","z":"f719dea.686f42","name":"","label":"Password","group":"d73d915b.3ae9b","order":2,"width":0,"height":0,"passthru":false,"mode":"password","delay":300,"topic":"","x":198.58798217773438,"y":290.68963623046875,"wires":[["4958a267.33dad4"]]},{"id":"7c016b9.cdaa494","type":"function","z":"f719dea.686f42","name":"username","func":"global.set(\"username\",msg.payload);","outputs":1,"noerr":0,"x":203.31027221679688,"y":248.32848358154297,"wires":[[]]},{"id":"4958a267.33dad4","type":"function","z":"f719dea.686f42","name":"password","func":"global.set(\"password\",msg.payload);\n\n","outputs":1,"noerr":0,"x":196.64794921875,"y":332.3476257324219,"wires":[[]]},{"id":"a67a9f7c.e56d18","type":"comment","z":"f719dea.686f42","name":"login details","info":"input your login details in dashboard at\n\nhttp://localhost:1880/ui/#/0\n\nset as global variable hence use only once for multiple flows","x":195.22695922851562,"y":153.92597198486328,"wires":[]},{"id":"6e178df1.e19684","type":"function","z":"f719dea.686f42","name":"INPUTS","func":"// INPUTS:\n\nfilter = {\n    // IfcGUID is a default value, keep always as first item. Use Item:GUID for models uploaded with Navis plugin\n    \"IFC%20GUID\": [], \n    // add custom filters below\n    \"IFC%20Type\": [false, \"IfcWall\"],\n}\n\nallRevisions = false;\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.filter = filter;\nmsg.inputs.allRev = allRevisions;\n\nreturn msg;","outputs":1,"noerr":0,"x":1041.8936767578125,"y":181.62970733642578,"wires":[["613f57aa.b8d468"]]},{"id":"585e33b.cafcccc","type":"function","z":"f719dea.686f42","name":"INPUTS","func":"// INPUTS\n\ntrackIDs = [\"***\",\"***\"]; // \n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.trackIDs = trackIDs;\n\nreturn msg;","outputs":1,"noerr":0,"x":1355.2918014526367,"y":173.291748046875,"wires":[["45dcac32.425e84"]]},{"id":"a0dd60aa.5cf528","type":"function","z":"f719dea.686f42","name":"CREATE ISSUE?","func":"// INPUTS\n\ncreateIssue = false;\n\n\n// ignore the rest\n\nif(createIssue){\n    return msg;\n}","outputs":1,"noerr":0,"x":1360.2919921875,"y":485.7917175292969,"wires":[[]]},{"id":"be682162.7a3988","type":"comment","z":"f719dea.686f42","name":"ID map","info":"","x":723.6248168945312,"y":444.2084655761719,"wires":[]},{"id":"cb89078d.3425a","type":"function","z":"f719dea.686f42","name":"set ID map","func":"flow.set(\"IDmap\", msg.payload);","outputs":1,"noerr":0,"x":722.3748168945312,"y":597.875,"wires":[[]]},{"id":"b59cf33d.4caed8","type":"function","z":"f719dea.686f42","name":"shared IDs","func":"function getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n}\nfunction createObject(account, ID, modelID, sharedID) {\n    var o = {};\n    o.account = account;\n    o.id = ID;\n    o.model = modelID;\n    o.shared_id = sharedID;\n    return o\n}\n\nvar objects = [];\nIDmap = flow.get(\"IDmap\");\ntry{\n    var test = IDmap.length;\n}catch(error){\n    node.error(\"Missing ID map\", msg);\n    return;\n}\n\nif (IDmap !== undefined) {\n    if (IDmap.subModels !== undefined) {        // if federation\n        for (var i = 0; i < msg.payload.length; i++) {\n            for (var j = 0; j < IDmap.subModels.length; j++) {\n                var key = getKeyByValue(IDmap.subModels[j].idMap, msg.payload[i]);\n                if (key !== undefined) {\n                    objects.push(createObject(IDmap.subModels[j].account, key, IDmap.subModels[j].model, msg.payload[i]));\n                    break;\n                }\n            }\n        }\n    } else {\n        for (var i = 0; i < msg.payload.length; i++) {\n            var key = getKeyByValue(IDmap.idMap, msg.payload[i]);\n            objects.push(createObject(flow.get(\"teamspace\"), key, flow.get(\"modelID\"), msg.payload[i]));\n        }\n    }\n}\n\nmsg.payload = objects;\n\nreturn msg;","outputs":1,"noerr":0,"x":1377.6251831054688,"y":695.000244140625,"wires":[["cde1238c.43e28"]]},{"id":"b0fad9f0.40da38","type":"function","z":"f719dea.686f42","name":"INPUTS","func":"// INPUTS\n\n// validation criteria (fields and values) set in external validation spreadsheet - load with Read CSV node\nexclude = [\"IfcBuilding\",\"IfcBuildingStorey\",\"IfcSite\"]; \ncheckValue = false;      // false for checking that a field exists in object's metadata\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.exclude = exclude;\nmsg.inputs.checkValue = checkValue;\n\nreturn msg;","outputs":1,"noerr":0,"x":738.6251220703125,"y":772.5416259765625,"wires":[["1eeb7438.22a1a4"]]},{"id":"5c879a20.aee30c","type":"function","z":"f719dea.686f42","name":"INPUTS","func":"// INPUTS\n\nissueName = \"***\";\ndescription = \"***\";\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.issueName = issueName;\nmsg.inputs.desc = description;\n\nreturn msg;","outputs":1,"noerr":0,"x":1645.5834045410156,"y":689.6251754760742,"wires":[["67c14232.c9a834"]]},{"id":"b5ecaae0.8176b","type":"comment","z":"f719dea.686f42","name":"create group","info":"","x":1379.3335571289062,"y":639.2086181640625,"wires":[]},{"id":"6b7440c0.52433","type":"function","z":"f719dea.686f42","name":"CREATE ISSUE?","func":"// INPUTS\n\ncreateIssue = false;\n\n\n// ignore the rest\n\nif(createIssue){\n    return msg;\n}","outputs":1,"noerr":0,"x":736.0001831054688,"y":948.791748046875,"wires":[[]]},{"id":"286154c6.0c991c","type":"ui_chart","z":"f719dea.686f42","name":"count by meta","group":"7063e980.1768f8","order":1,"width":0,"height":0,"label":"count by metadata value in current revision","chartType":"horizontalBar","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1868.2250061035156,"y":309.2951965332031,"wires":[[],[]]},{"id":"b841e441.7e4dd8","type":"function","z":"f719dea.686f42","name":"teamspace","func":"msg.payload = flow.get(\"teamspace\");\n\nreturn msg;","outputs":1,"noerr":0,"x":517.6307373046875,"y":1145.95849609375,"wires":[["b683d31b.1eef88"]]},{"id":"e4cf16d5.7c5958","type":"function","z":"f719dea.686f42","name":"revisions","func":"revisions = flow.get(\"revisions\");\ntags = [];\n\ntry{\n    test = revisions.length;\n}catch(error){\n    node.error(\"Missing revisions\", msg);\n    return;\n}\n\nfor(var i=0; i<revisions.length; i++){\n    if(revisions[i] !== undefined){\n        if(revisions[i].tag !== undefined){\n            tags.push(revisions[i].tag);\n        }else{\n            tags.push(String(String(revisions[i].timestamp).split(\".\")[0]).replace(\"T\", \" \"));\n        }\n    }\n}\n\nmsg.payload = tags;\n\nreturn msg;","outputs":1,"noerr":0,"x":518.8153076171875,"y":1195.732666015625,"wires":[["4e42814.71e89"]]},{"id":"4d5a8a45.0b89fc","type":"function","z":"f719dea.686f42","name":"model settings","func":"cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \".json\";\n\nreturn msg;","outputs":1,"noerr":0,"x":333.8809242248535,"y":1194.7106337547302,"wires":[["d4ddb127.7db358"]]},{"id":"d4ddb127.7db358","type":"http request","z":"f719dea.686f42","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":333.8765869140625,"y":1248.4020080566406,"wires":[["ad5eb92f.83c0f8"]]},{"id":"ad5eb92f.83c0f8","type":"function","z":"f719dea.686f42","name":"name","func":"if(msg.payload.name){\n    msg.name = msg.payload.name;\n}else{\n    msg.name = \"NOT AUTHORISED\";\n}\n\nif(msg.payload.federate === true){\n    msg.type = \"federation: \";\n}else{\n    msg.type = \"model: \";\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":517.62451171875,"y":1243.4584655761719,"wires":[["55e5290e.9dc6b8"]]},{"id":"5c620b82.bdb33c","type":"function","z":"f719dea.686f42","name":"---","func":"return msg;","outputs":1,"noerr":0,"x":301.3807373046875,"y":1138.45849609375,"wires":[["4d5a8a45.0b89fc","b841e441.7e4dd8","e4cf16d5.7c5958"]]},{"id":"55e5290e.9dc6b8","type":"ui_text","z":"f719dea.686f42","group":"48aae281.a9aa84","order":1,"width":0,"height":0,"name":"model","label":"{{msg.type}}","format":"{{msg.name}}","layout":"row-left","x":703.2600517272949,"y":1146.812476158142,"wires":[]},{"id":"b683d31b.1eef88","type":"ui_text","z":"f719dea.686f42","group":"48aae281.a9aa84","order":2,"width":0,"height":0,"name":"","label":"teamspace:  ","format":"{{msg.payload}}","layout":"row-left","x":702.0751953125,"y":1200.7882385253906,"wires":[]},{"id":"c8dff299.797208","type":"ui_text","z":"f719dea.686f42","group":"48aae281.a9aa84","order":3,"width":0,"height":0,"name":"","label":"properties:  ","format":"","layout":"row-left","x":710.0751953125,"y":1294.7882385253909,"wires":[]},{"id":"a3bab3e5.17c108","type":"function","z":"f719dea.686f42","name":"filter property","func":"a = Object.keys(msg.inputs.filter);\na.shift();\nmsg.payload = a;\n\nreturn msg;","outputs":1,"noerr":0,"x":962.0054626464844,"y":1135.1308670043943,"wires":[["5ec1aab.5e85ed4"]]},{"id":"5ec1aab.5e85ed4","type":"ui_template","z":"f719dea.686f42","group":"48aae281.a9aa84","name":"properties","order":4,"width":"5","height":"3","format":"<table style=\"width:100%\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td><b>{{x}}</b></td>\n        </tr>\n</table>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1139.5054626464844,"y":1134.1309280395506,"wires":[[]]},{"id":"5e428bbf.f0aaf4","type":"comment","z":"f719dea.686f42","name":"details","info":"","x":501.9750366210937,"y":1082.8666992187498,"wires":[]},{"id":"80748c69.1a50e","type":"ui_chart","z":"f719dea.686f42","name":"","group":"7063e980.1768f8","order":4,"width":"0","height":"0","label":"changed","chartType":"horizontalBar","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1836.389404296875,"y":485.3570251464844,"wires":[[],[]]},{"id":"4e42814.71e89","type":"ui_template","z":"f719dea.686f42","group":"48aae281.a9aa84","name":"revisions","order":7,"width":"5","height":"3","format":"<table style=\"width:100%\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td><b>{{x}}</b></td>\n        </tr>\n</table>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":699.4306640625,"y":1243.0557861328123,"wires":[[]]},{"id":"4a8d37bf.bf01c","type":"ui_text","z":"f719dea.686f42","group":"48aae281.a9aa84","order":6,"width":0,"height":0,"name":"","label":"revisions:","format":"","layout":"row-left","x":697.2083740234375,"y":1334.166748046875,"wires":[]},{"id":"ebfa5113.a7eda8","type":"function","z":"f719dea.686f42","name":"CREATE ISSUE?","func":"// INPUTS\n\ncreateIssue = false;\n\n\n// ignore the rest\n\nif(createIssue){\n    return msg;\n}","outputs":1,"noerr":0,"x":1064.422119140625,"y":789.803466796875,"wires":[[]]},{"id":"681348c.d0dd838","type":"comment","z":"f719dea.686f42","name":"counter","info":"takes filter output, one or multiple revisions\n\nreturns quantities by metadata property","x":1649.7919006347656,"y":169.02096557617188,"wires":[]},{"id":"e57da8d3.4e7278","type":"function","z":"f719dea.686f42","name":"count by meta","func":"function sort(object){\n    if (typeof object != \"object\" || object instanceof Array) // Not to sort the array\n        return object;\n    var keys = Object.keys(object);\n    keys.sort();\n    var newObject = {};\n    for (var i = 0; i < keys.length; i++){\n        newObject[keys[i]] = sort(object[keys[i]])\n    }\n    return newObject;\n}\n\nif(msg.inputs.splitByRevision){\n    var allCounters = []\n    for(var i=0; i<msg.payload.length; i++){\n        var counter = {};\n        for(var j=0; j<msg.payload[i].length; j++){\n            var prop = String(msg.payload[i][j].value);\n            if(counter.hasOwnProperty(prop)){\n                counter[prop] += 1;\n            }else{\n                counter[prop] = 1;\n            }\n        }\n        sorted = sort(counter);\n        allCounters.push(counter);\n    }\n    msg.payload = allCounters;\n}else{\n    var counter = {};\n    for(var i=0; i<msg.payload.length; i++){\n        for(var j=0; j<msg.payload[i].length; j++){\n            var prop = String(msg.payload[i][j].value);\n            if(counter.hasOwnProperty(prop)){\n                counter[prop] += 1;\n            }else{\n                counter[prop] = 1;\n            }\n        }\n    }\n    sorted = sort(counter);\n    msg.payload = [sorted];\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1643.9031066894531,"y":258.9377136230469,"wires":[["a70e56aa.b74e6"]]},{"id":"a70e56aa.b74e6","type":"function","z":"f719dea.686f42","name":"format","func":"var data = [];\nvar labels = [];\nvar series = [];\nvar revisions = flow.get(\"revisions\");\nvar m = {};\n\nif(msg.inputs.splitByRevision){\n    for(var i=0; i<msg.payload.length; i++){\n        if(revisions[i] !== undefined){\n            if(revisions[i].tag !== undefined){\n                series.push(revisions[i].tag);\n            }else{\n                series.push(String(String(revisions[i].timestamp).split(\".\")[0]).replace(\"T\", \" \"));\n            }\n        }\n        for(var j=0; j<Object.keys(msg.payload[i]).length; j++){\n            if(labels.indexOf(Object.keys(msg.payload[i])[j]) === -1){\n                labels.push(Object.keys(msg.payload[i])[j]);\n            }\n        }\n    }\n    for(var i=0; i<msg.payload.length; i++){\n        temp = [];\n        for(var k=0; k<labels.length; k++){\n            if(msg.payload[i].hasOwnProperty(labels[k])){\n                temp.push(msg.payload[i][labels[k]]);\n            }else{\n                temp.push(0)\n            }\n            \n        }\n        data.push(temp);\n    }\n    m.labels = labels;\n    m.series = series;\n    m.data = data;\n    msg.payload = [m];\n    \n}else{\n    for(var i=0; i<msg.payload.length; i++){\n        for(var j=0; j<Object.keys(msg.payload[i]).length; j++){\n            labels.push(Object.keys(msg.payload[i])[j]);\n            data.push(msg.payload[i][Object.keys(msg.payload[i])[j]]);\n        }\n    }\n    m.labels = labels;\n    m.series = [\"Count\"];\n    m.data = [data];\n    msg.payload = [m];\n}\n\nreturn msg;\n\n\n","outputs":"1","noerr":0,"x":1650.8893127441406,"y":307.27099609375,"wires":[["286154c6.0c991c"]]},{"id":"2a466a23.7b30a6","type":"function","z":"f719dea.686f42","name":"INPUTS","func":"// INPUTS\n\nsplitByRevision = false;\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.splitByRevision = splitByRevision;\n\nreturn msg;","outputs":1,"noerr":0,"x":1647.3661600748696,"y":208.36224958631726,"wires":[["e57da8d3.4e7278"]]},{"id":"d9c2da69.a68da8","type":"function","z":"f719dea.686f42","name":"diff","func":"for(var i=0; i<msg.payload[0].labels.length; i++){\n    include = [];\n    for(var j=0; j<msg.payload[0].series.length; j++){\n        include.push(msg.payload[0].data[j][i])\n    }\n    test = include.reduce(function(a, b){ return (a === b) ? a : false; });     // diff\n    if(test){\n        msg.payload[0].labels.splice(i,1);        // delete leaves null, clean up below\n        for(var j=0; j<msg.payload[0].series.length; j++){\n            msg.payload[0].data[j].splice(i,1);  \n        }\n    }\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"x":1656.9166259765625,"y":486.6040954589844,"wires":[["80748c69.1a50e"]]},{"id":"5df3d7c2.41d1d8","type":"comment","z":"f719dea.686f42","name":"show different only","info":"splitByRevision = true;","x":1655.291748046875,"y":441.9375305175781,"wires":[]},{"id":"58a4e269.018b4c","type":"comment","z":"f719dea.686f42","name":"display filtered","info":"","x":963.6249694824219,"y":1094.4374084472654,"wires":[]},{"id":"9c2581e2.f9b688","type":"http response","z":"f719dea.686f42","name":"","statusCode":"","headers":{},"x":1385.6898193359375,"y":1222.6480712890625,"wires":[]},{"id":"3681bfc6.ead8e","type":"http request","z":"f719dea.686f42","name":"","method":"POST","ret":"obj","url":"{{{topic}}}","tls":"","x":1374.6876220703125,"y":1171.1588439941406,"wires":[["9c2581e2.f9b688"]]},{"id":"98b1107e.08a83","type":"function","z":"f719dea.686f42","name":"new model API","func":"modelNames = msg.inputs.modelNames;\nproject = msg.inputs.project;\ncalls = [];\n\nfor(var prop in modelNames){\n    o = {\n        \"desc\":modelNames[prop][0],\n        \"modelName\":prop,\n        \"project\":project,\n        \"type\":modelNames[prop][1],\n        \"unit\":modelNames[prop][2]\n    }\n    calls.push(o)\n}\n\nvar cookie = flow.get(\"cookie\");\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\nmsg.topic = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/model\";\nmsg.payload = calls;\n\nreturn msg;","outputs":1,"noerr":0,"x":1379.2637939453125,"y":1066.1950073242188,"wires":[["8efb39fa.865638"]]},{"id":"8efb39fa.865638","type":"split","z":"f719dea.686f42","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1378.683349609375,"y":1115.6322326660156,"wires":[["3681bfc6.ead8e"]]},{"id":"b70944ac.adb418","type":"comment","z":"f719dea.686f42","name":"create model","info":"","x":1361.45654296875,"y":971.6424865722656,"wires":[]},{"id":"295d5e1d.33c072","type":"function","z":"f719dea.686f42","name":"INPUTS","func":"// INPUTS\n\nproject = \"***\";\n\nmodelNames = // name:[description,type,units]\n{\n    \"***\":[\"\",\"A\",\"mm\"],\n    \"***\":[\"\",\"S\",\"mm\"],\n    \"***\":[\"\",\"MEP\",\"mm\"],\n}\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.project = project;\nmsg.inputs.modelNames = modelNames;\n\nreturn msg;","outputs":1,"noerr":0,"x":1380.4565734863281,"y":1021.2647094726562,"wires":[["98b1107e.08a83"]]},{"id":"24d395c9.7dd47a","type":"function","z":"f719dea.686f42","name":"filter operations","func":"// get list of meta IDs\nif(msg.inputs.allRev){\n    // not sure if this makes sense \n    // since only one group of objects in one revision can be created\n    node.send({payload:\"coming soon...\"})\n}else{\n    metaIDs = [];\n    for(var i=0; i<msg.payload[0].length; i++){\n        metaIDs.push(msg.payload[0][i].metaID);\n    }\n}\n\n// operations\nif(msg.inputs.operation === \"union\"){\n    result = [];\n    // http://mikeheavers.com/tutorials/removing_duplicates_in_an_array_using_javascript\n    var result = metaIDs.filter(function(elem, pos) {\n        return metaIDs.indexOf(elem) == pos;\n    });    \n}\nif (msg.inputs.operation === \"intersection\") {\n    // https://stackoverflow.com/questions/840781/get-all-non-unique-values-i-e-duplicate-more-than-one-occurrence-in-an-array#840808\n    var result = [];\n    var sorted_arr = metaIDs.sort();\n    for (var i = 0; i < sorted_arr.length - 1; i++) {\n        var flag = msg.inputs.filterLength - 2;\n        for (var j = 1; j < msg.inputs.filterLength - 1; j++) {\n            if (sorted_arr[i + j] == sorted_arr[i]) {\n                flag -= 1;\n            } else {\n                break;\n            }\n        }\n        if (flag === 0) {\n            result.push(sorted_arr[i]);\n        }\n    }\n}\n\nif(msg.inputs.operation === \"difference\"){\n    var result = [];\n    // union\n    var union = metaIDs.filter(function(elem, pos) {\n        return metaIDs.indexOf(elem) == pos;\n    });\n    // intersection\n    var intersection = [];\n    var sorted_arr = metaIDs.sort();\n    for (var i = 0; i < sorted_arr.length - 1; i++) {\n        var flag = msg.inputs.filterLength - 2;\n        for (var j = 1; j < msg.inputs.filterLength - 1; j++) {\n            if (sorted_arr[i + j] == sorted_arr[i]) {\n                flag -= 1;\n            } else {\n                break;\n            }\n        }\n        if (flag === 0) {\n            intersection.push(sorted_arr[i]);\n        }\n    }\n    // difference\n    Array.prototype.diff = function(a) {\n        return this.filter(function(i) {return a.indexOf(i) < 0;});\n    };\n    result = union.diff(intersection)\n}\n\n// get mesh IDs\nmeshIDs = [];\nfiltered = [];\nfor(var i=0; i<msg.payload[0].length; i++){\n    for(var j=0; j<result.length; j++){\n        if(msg.payload[0][i].metaID === result[j]){\n            meshIDs.push(msg.payload[0][i].parents);\n            filtered.push(msg.payload[0][i]);\n        }\n    }\n}\n\n// flatten meshIDs\nmsg.payload = [].concat(...meshIDs);\nreturn [{payload:filtered},msg];","outputs":"2","noerr":0,"x":1060.208251953125,"y":730.2708129882812,"wires":[[],["ebfa5113.a7eda8"]],"outputLabels":["filtered","mesh IDs"]},{"id":"9f6f764c.f02cc8","type":"function","z":"f719dea.686f42","name":"INPUTS","func":"// INPUTS\n\noperation = \"intersection\";    // choose from: union, intersection, difference\n\n\n// ignore the rest\n\nvar filterLength = Object.keys(msg.inputs.filter).length;\nmsg.inputs = {};\nmsg.inputs.operation = operation;\nmsg.inputs.filterLength = filterLength;\n\nreturn msg;","outputs":1,"noerr":0,"x":1063.16015625,"y":678.7053527832031,"wires":[["24d395c9.7dd47a"]]},{"id":"592dfe6e.baf6f","type":"comment","z":"f719dea.686f42","name":"operations","info":"go after filter","x":1054.4102783203125,"y":638.7886657714844,"wires":[]},{"id":"7063e980.1768f8","type":"ui_group","z":"","name":"Results","tab":"ac741d57.26af6","order":2,"disp":true,"width":"18"},{"id":"d73d915b.3ae9b","type":"ui_group","z":"","name":"Log In","tab":"12682a10.517ed6","order":1,"disp":true,"width":"6"},{"id":"48aae281.a9aa84","type":"ui_group","z":"","name":"Details","tab":"ac741d57.26af6","order":1,"disp":true,"width":"5"},{"id":"ac741d57.26af6","type":"ui_tab","z":"","name":"Dashboard","icon":"dashboard","order":2},{"id":"12682a10.517ed6","type":"ui_tab","z":"","name":"Log In","icon":"dashboard","order":1}]