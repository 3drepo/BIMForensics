[{"id":"21cef392.07d3ec","type":"tab","label":"Meta Diff","disabled":false,"info":"Compares metadata property in all model objects across two revisions.\r\n\r\nWorks with IFCs only.\r\n\r\nResults sent to 3D Repo as a new issue. \r\n\r\nWorks on models only, federations are not supported.\r\n"},{"id":"2e3ffcf5.30da44","type":"inject","z":"21cef392.07d3ec","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":119.52381134033203,"y":46.543291091918945,"wires":[["affc61ad.922b3","37ed11ce.822e6e"]]},{"id":"99c2a39c.cbd94","type":"debug","z":"21cef392.07d3ec","name":"A","active":true,"console":"false","complete":"payload","x":1393.5031204223633,"y":243.62689781188965,"wires":[]},{"id":"c1cf0773.41ea48","type":"debug","z":"21cef392.07d3ec","name":"B","active":true,"console":"false","complete":"payload","x":1405.8150100708008,"y":140.73816013336182,"wires":[]},{"id":"84f13859.b0b378","type":"function","z":"21cef392.07d3ec","name":"API call","func":"filter = flow.get(\"filter\")\ncookie = flow.get(\"cookie\");\nrevision = flow.get(\"revision\");\nvar calls = [];\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nfor(var i=0; i<revision.length; i++){\n    for(var prop in filter){\n        calls.push(\"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + revision[i] + \"/meta/findObjsWith/\" + prop + \".json\");\n    }\n}\n\nmsg.payload = calls;\n\nreturn msg;","outputs":"1","noerr":0,"x":743.4024543762207,"y":46.07339286804199,"wires":[["baa0f210.2d3b6"]]},{"id":"baa0f210.2d3b6","type":"split","z":"21cef392.07d3ec","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":880.8118362426758,"y":45.95047187805176,"wires":[["8f4a2873.77c2a8"]]},{"id":"8f4a2873.77c2a8","type":"http request","z":"21cef392.07d3ec","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":1033.3640441894531,"y":45.69371795654297,"wires":[["b6e53645.051108"]]},{"id":"b6e53645.051108","type":"join","z":"21cef392.07d3ec","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","x":1178.181734085083,"y":46.29886054992676,"wires":[["d6b486cb.311538"]]},{"id":"affc61ad.922b3","type":"function","z":"21cef392.07d3ec","name":"INPUTS","func":"// *** required fields:\nteamspace = \"***\";     // make sure you have permissions to acces this teamspace\nmodelID = \"***\";   // models only, federations unsupported\nrevision = [\"***\",\"***\"];      // 2 revisions only in descendig order\n\nissueName = \"Meta Diff\";     // name appears in issue tracker, issues created in the first revision in the list\ncreateIssue = true;\n\nfilter = {\n    \"IFC%20GUID\":[],    // default value, keep Ifc GUID always as first item\n    \"AppearsIn\":[]      // works for one parameter only\n}\n\n// ignore the rest\nflow.set(\"teamspace\", teamspace);\nflow.set(\"modelID\", modelID);\nflow.set(\"revision\", revision);\nflow.set(\"filter\",filter);\nflow.set(\"issueName\", issueName);\nflow.set(\"createIssue\", createIssue);\n\nreturn msg;","outputs":1,"noerr":0,"x":111.51799583435059,"y":278.5077500343323,"wires":[[]]},{"id":"52057b0.541ee84","type":"debug","z":"21cef392.07d3ec","name":"","active":true,"console":"false","complete":"false","x":1760.0867729187012,"y":389.40098810195923,"wires":[]},{"id":"d6b486cb.311538","type":"function","z":"21cef392.07d3ec","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":638.083309173584,"y":300.1805667877197,"wires":[["bb86adb5.1e1a","bb9245ec.4f0158"]]},{"id":"bf8a2928.b25418","type":"http request","z":"21cef392.07d3ec","name":"","method":"POST","ret":"obj","url":"{{{topic}}}","tls":"","x":445.0173797607422,"y":48.01042175292969,"wires":[["c76b2f8d.e12f"]]},{"id":"c76b2f8d.e12f","type":"function","z":"21cef392.07d3ec","name":"cookie","func":"var cookies = msg.responseCookies;\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": \"connect.sid=\" + cookies[\"connect.sid\"][\"value\"]\n};\n\nflow.set(\"cookie\",msg.headers[\"Cookie\"]);\n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":589.7951774597168,"y":47.54015064239502,"wires":[["84f13859.b0b378"]]},{"id":"37ed11ce.822e6e","type":"function","z":"21cef392.07d3ec","name":"header","func":"msg.payload = {\n    \"username\": global.get(\"username\"),   \n    \"password\": global.get(\"password\")\n};\n\nmsg.topic = \"https://api1.www.3drepo.io/api/login\";\n\nmsg.headers = {\n    'content-type':'application/json'\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":293.64418029785156,"y":48.037187576293945,"wires":[["bf8a2928.b25418"]]},{"id":"bb86adb5.1e1a","type":"function","z":"21cef392.07d3ec","name":"GUIDs","func":"meta = flow.get(\"meta\");\nfilter = flow.get(\"filter\");\nrevision = flow.get(\"revision\");\nmerged = [];\n\n// partition API call results by revision\nvar rev = []\nwhile (msg.payload.length > 0){\n    rev.push(msg.payload.splice(0, Object.keys(filter).length));    // this works\n}\n\n// get meta GUIDs, IFC GUIDs\nfor(var i=0; i<rev.length; i++){\n    merged[i] = [];\n    for(var j in rev[i][0][\"data\"]){\n        for(var k in rev[i][1][\"data\"]){\n            if(rev[i][1][\"data\"][j] !== undefined && rev[i][0][\"data\"][j][\"_id\"] === rev[i][1][\"data\"][k][\"_id\"]){\n                o = {};\n                o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                o.value = rev[i][1][\"data\"][k][\"metadata\"][\"value\"];\n                o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                o.parents = rev[i][1][\"data\"][k][\"parents\"];\n                merged[i].push(o)\n            }\n        }\n    }\n}\n\nmsg.payload = merged;\n\nreturn msg;","outputs":1,"noerr":0,"x":788.9267616271973,"y":296.74903774261475,"wires":[["c1cf0773.41ea48","b153e34c.a58b3"]]},{"id":"5389e57a.f46a5c","type":"http response","z":"21cef392.07d3ec","name":"","statusCode":"","headers":{},"x":1387.0255756378174,"y":581.0103759765625,"wires":[]},{"id":"f1f08c26.5716b","type":"http request","z":"21cef392.07d3ec","name":"","method":"POST","ret":"obj","url":"{{{topic}}}","tls":"","x":754.5845623016357,"y":578.0432224273682,"wires":[["e1cca876.cf47b8"]]},{"id":"384bc0b4.62a89","type":"function","z":"21cef392.07d3ec","name":"group API call","func":"var cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nmsg.topic = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/groups\";\n\nvar group = {};\ngroup.name = \"filtered\";\ngroup.color = [255,0,0];\ngroup.objects = msg.payload;\n\nmsg.payload = group;\n\nreturn msg;","outputs":1,"noerr":0,"x":1356.6206073760986,"y":448.9011011123657,"wires":[["f1f08c26.5716b"]]},{"id":"88055e4f.35c18","type":"function","z":"21cef392.07d3ec","name":"ID map call","func":"cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + flow.get(\"revision\")[0] + \"/idmap.json\";\n\nreturn msg;\n","outputs":1,"noerr":0,"x":811.811544418335,"y":443.09077072143555,"wires":[["1bf2b81e.db0158"]]},{"id":"1bf2b81e.db0158","type":"http request","z":"21cef392.07d3ec","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":994.307165145874,"y":446.51093006134033,"wires":[["c6d5ef22.9cd7f"]]},{"id":"c6d5ef22.9cd7f","type":"function","z":"21cef392.07d3ec","name":"shared IDs","func":"function getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n}\nfunction createObject(account, ID, modelID, sharedID){\n      var o = {};\n      o.account = account;\n      o.id = ID;\n      o.model = modelID;\n      o.shared_id = sharedID;\n      return o\n}\n  \nvar objects = [];\nfiltered = flow.get(\"filteredMesh\");\n// node.send({payload:filtered})\n  \nif (msg.payload != undefined) {\n  if (msg.payload.subModels != undefined){\n    for(var i=0; i<filtered.length; i++){\n        for (var j=0; j<msg.payload.subModels.length; j++){\n            var key = getKeyByValue(msg.payload.subModels[j].idMap, filtered[i]);\n            if(key != undefined){\n                objects.push(createObject(msg.payload.subModels[j].account, key, msg.payload.subModels[j].model, filtered[i]));\n                break\n            }\n        }\n    }\n  }else{\n      for(var i=0; i<filtered.length; i++){\n          var key = getKeyByValue(msg.payload.idMap, filtered[i]);\n          objects.push(createObject(flow.get(\"teamspace\"), key, flow.get(\"modelID\"), filtered[i]));\n      }\n  }\n}\n\nmsg.payload = objects;\n\nreturn msg;","outputs":1,"noerr":0,"x":1167.8809795379639,"y":450.134316444397,"wires":[["384bc0b4.62a89"]]},{"id":"e1cca876.cf47b8","type":"function","z":"21cef392.07d3ec","name":"create issue API call","func":"var issue = {};\nvar viewpoint = {};\nfilter = flow.get(\"filter\");\nstats = flow.get(\"stats\");\n\nissue.name = flow.get(\"issueName\");\nissue.desc = flow.get(\"filteredMeta\").length + \" objects differ in property \" + Object.keys(filter)[1] + \" in revisions: \" + flow.get(\"revision\");\nissue.account = flow.get(\"username\");\nissue.assigned_roles = [];\nissue.creator_role = \"Client\";\nissue.group_id = msg.payload._id;\nissue.model = flow.get(\"modelID\");\nissue.objectId = null;\nissue.pickedNorm = null;\nissue.pickedPos = null;\nissue.priority = \"none\";\nissue.rev_id = null;\nissue.scale = 1;\nissue.status = \"open\";\nissue.topic_type = \"for_information\";\n\nissue.comments = flow.get(\"comments\");\n\n// viewpoint.aspect_ratio =  1.1499189138412476;\n// viewpoint.clippingPlanes = [];\n// viewpoint.far = 37788.875;\n// viewpoint.fov = 1.0471975803375244;\n// viewpoint.look_at = [9599.10546875,76.478515625,-6112.9375];\n// viewpoint.near = 75.57775115966797;\n// viewpoint.position = [26698.98046875,18214.173828125,-25682.21875];\n// viewpoint.right = [-0.7530198097229004,0,-0.6579978466033936];\nviewpoint.screenshot = \"\";\n// viewpoint.up = [-0.37658801674842834,0.8200274705886841,0.4309714138507843];\n// viewpoint.view_dir = [-0.5395762920379639,-0.5723240971565247,0.6174969673156738];\n\nissue.viewpoint = viewpoint;\n\nvar cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nif(flow.get(\"revision\") == \"master/head\"){\n    msg.topic = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/issues.json\";\n}else{\n    msg.topic = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + flow.get(\"revision\")[0] + \"/issues.json\";\n}\n\nmsg.payload = issue;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":970.4447116851807,"y":578.6505155563354,"wires":[["6f9e8dcc.6735c4"]]},{"id":"6f9e8dcc.6735c4","type":"http request","z":"21cef392.07d3ec","name":"","method":"POST","ret":"obj","url":"{{{topic}}}","tls":"","x":1220.083257675171,"y":581.0147466659546,"wires":[["5389e57a.f46a5c"]]},{"id":"5ea86499.36a88c","type":"switch","z":"21cef392.07d3ec","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"No new issue created","vt":"str"},{"t":"eq","v":"payload","vt":"msg"}],"checkall":"false","outputs":2,"x":637.1050395965576,"y":434.84043979644775,"wires":[[],["88055e4f.35c18"]]},{"id":"bb9245ec.4f0158","type":"function","z":"21cef392.07d3ec","name":"create issue","func":"createIssue = flow.get(\"createIssue\");\n\nif(createIssue === true){ \n    return msg;\n}else{\n    msg.payload = \"No new issue created\"\n    return msg;\n}","outputs":1,"noerr":0,"x":463,"y":437.0415816307068,"wires":[["5ea86499.36a88c"]]},{"id":"aa12a0a6.e353d","type":"comment","z":"21cef392.07d3ec","name":"how to","info":"works with IFCs only\n\n1. try 3D Diff to find new or obsolete objects\n2. Find differences in object’s metadata between 2 revisions\n\nWorks on models only, federations are not supported.\n\n","x":99.07292175292969,"y":338.7951431274414,"wires":[]},{"id":"4df75c4a.c3dd24","type":"function","z":"21cef392.07d3ec","name":"all meta call","func":"filter = flow.get(\"filter\")\ncookie = flow.get(\"cookie\");\nrevision = flow.get(\"revision\");\nvar calls = [];\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nfor(var i=0; i<revision.length; i++){\n    for(var prop in filter){\n        calls.push(\"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + revision[i] + \"/meta/all.json\");\n    }\n}\n\nmsg.payload = calls;\n\nreturn msg;","outputs":"1","noerr":0,"x":741.8745346069336,"y":117.2961368560791,"wires":[["8720ae34.dcd63"]]},{"id":"8720ae34.dcd63","type":"split","z":"21cef392.07d3ec","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":901.4409790039062,"y":115.71675872802734,"wires":[["5ff1f7e9.9c2298"]]},{"id":"5ff1f7e9.9c2298","type":"http request","z":"21cef392.07d3ec","name":"","method":"GET","ret":"obj","url":"{{{payload}}}","tls":"","x":1053.9931869506836,"y":115.46000480651855,"wires":[["4f138d11.e38624"]]},{"id":"4f138d11.e38624","type":"join","z":"21cef392.07d3ec","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","x":1198.8108768463135,"y":116.06514739990234,"wires":[[]]},{"id":"b153e34c.a58b3","type":"function","z":"21cef392.07d3ec","name":"meta diff","func":"GUIDs = [];\nmetaIDs = [];\n\nfor(var i=0; i<msg.payload[0].length; i++){\n    for(var j=0; j<msg.payload[1].length; j++){\n        if(msg.payload[0][i].IFCGUID === msg.payload[1][j].IFCGUID){\n            if(msg.payload[0][i].value != msg.payload[1][j].value){\n                metaIDs.push(msg.payload[0][j].metaID)\n                for(var k=0; k<msg.payload[0][i].parents.length; k++){\n                    GUIDs.push(msg.payload[0][i].parents[k])\n                }\n            }\n        }\n    }\n}\n\nflow.set(\"filteredMeta\", metaIDs);\nflow.set(\"filteredMesh\", GUIDs);\n","outputs":1,"noerr":0,"x":954.0175552368164,"y":295.29619312286377,"wires":[[]]}]