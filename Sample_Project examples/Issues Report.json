[
    {
        "id": "4661b4e5.ec84d4",
        "type": "tab",
        "label": "Issues Report",
        "disabled": false,
        "info": "Dashboard to track issues resolution progress"
    },
    {
        "id": "93856827.db8308",
        "type": "inject",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 153.6041717529297,
        "y": 343.6041564941406,
        "wires": [
            [
                "ec717877.79e028"
            ]
        ]
    },
    {
        "id": "ec717877.79e028",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "MAIN INPUTS",
        "func": "// INPUTS\n\nteamspace = \"***\";  // make sure you have permissions to acces this teamspace\nmodelID = \"***\";    // make sure you have permissions to acces this model or federation\n\n\n// ignore the rest\n\ntry{\n    flow.set(\"teamspace\", teamspace);\n}catch(error){\n    node.error(\"Missing teamspace\", msg);\n    return;\n}\ntry{\n    flow.set(\"modelID\", modelID);\n}catch(error){\n    node.error(\"Missing modelID\", msg);\n    return;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 186.32066345214844,
        "y": 185.67135620117188,
        "wires": [
            [
                "877f6c5c.d3ddb8"
            ]
        ]
    },
    {
        "id": "2c99ed74.f7d80a",
        "type": "http request",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "{{{topic}}}",
        "tls": "",
        "x": 486.10418701171875,
        "y": 166.10415649414062,
        "wires": [
            [
                "7db2bd49.43132c"
            ]
        ]
    },
    {
        "id": "7db2bd49.43132c",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "cookie",
        "func": "var cookies = msg.responseCookies;\n\ntry{\n    cookies[\"connect.sid\"];\n}catch(error){\n    node.error(\"Invalid username or password\", msg);\n    return;\n}\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": \"connect.sid=\" + cookies[\"connect.sid\"][\"value\"]\n};\n\nflow.set(\"cookie\",msg.headers[\"Cookie\"]);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 488.65985107421875,
        "y": 217.8560791015625,
        "wires": [
            [
                "3b16460f.5ec4a2"
            ]
        ]
    },
    {
        "id": "877f6c5c.d3ddb8",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "header",
        "func": "try{\n    test = global.get(\"username\")[0];\n}catch(error){\n    node.error(\"Login error - login at http://localhost:1880/ui/#/0\", msg);\n    return;\n}\ntry{\n    test = global.get(\"password\")[0];\n}catch(error){\n    node.error(\"Login error - login at http://localhost:1880/ui/#/0\", msg);\n    return;\n}\n\n\nmsg.payload = {\n \"username\": global.get(\"username\"), \n \"password\": global.get(\"password\")\n};\n\nmsg.topic = \"https://api1.www.3drepo.io/api/login\";\n\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 488.0644226074219,
        "y": 117.2420425415039,
        "wires": [
            [
                "2c99ed74.f7d80a"
            ]
        ]
    },
    {
        "id": "357f531a.5201d4",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "login",
        "info": "",
        "x": 489.97576904296875,
        "y": 70.31598663330078,
        "wires": []
    },
    {
        "id": "fcdf01e7.697e68",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "how to",
        "info": "log in at http://localhost:1880/ui/#/0 or http://yourVPS:1880/ui/#/0\nset your teamspace and model ID of Lego_House_Federation in MAIN INPUTS\ndeploy\ngo to http://localhost:1880/ui/#/1 or http://youtVPS:1880/ui/#/1 to see the results",
        "x": 164.7083282470703,
        "y": 90.5624771118164,
        "wires": []
    },
    {
        "id": "3799de03.a9f09a",
        "type": "ui_text_input",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "label": "Username",
        "group": "28e93976.ad5d3e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "20",
        "topic": "",
        "x": 174.8542022705078,
        "y": 531.1041946411133,
        "wires": [
            [
                "fba91689.f8d098"
            ]
        ]
    },
    {
        "id": "367081d1.32d336",
        "type": "ui_text_input",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "label": "Password",
        "group": "28e93976.ad5d3e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "20",
        "topic": "",
        "x": 173.8818817138672,
        "y": 617.4974670410156,
        "wires": [
            [
                "ed5acfbe.58ae38"
            ]
        ]
    },
    {
        "id": "fba91689.f8d098",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "username",
        "func": "global.set(\"username\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 178.6041717529297,
        "y": 575.1363143920898,
        "wires": [
            []
        ]
    },
    {
        "id": "ed5acfbe.58ae38",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "password",
        "func": "global.set(\"password\",msg.payload);\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 171.9418487548828,
        "y": 659.1554565429688,
        "wires": [
            []
        ]
    },
    {
        "id": "afe4e868.c61f48",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "login details",
        "info": "input your login details in dashboard at\n\nhttp://localhost:1880/ui/#/0\n\nset as global variable hence use only once for multiple flows",
        "x": 170.52085876464844,
        "y": 480.73380279541016,
        "wires": []
    },
    {
        "id": "e11e3496.619748",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "get issues",
        "info": "",
        "x": 752.2083740234375,
        "y": 65.5624771118164,
        "wires": []
    },
    {
        "id": "3b16460f.5ec4a2",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "issues API",
        "func": "cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/\" + \"issues.json\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 739.854248046875,
        "y": 122.35414123535156,
        "wires": [
            [
                "9272f589.3ddd5"
            ]
        ]
    },
    {
        "id": "9272f589.3ddd5",
        "type": "http request",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "{{{payload}}}",
        "tls": "",
        "x": 749.8438415527344,
        "y": 171.83329105377197,
        "wires": [
            [
                "49bbf49f.70b34c"
            ]
        ]
    },
    {
        "id": "5fe5c1a6.e81838",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "simple counter",
        "info": "takes filter output, one or multiple revisions\n\nreturns quantities by metadata property",
        "x": 1035.9815673828125,
        "y": 64.45372009277344,
        "wires": []
    },
    {
        "id": "4e46553.30febac",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "format",
        "func": "var data = [];\nvar labels = [];\nvar series = [];\nvar m = {};\n\nfor(var i=0; i<msg.payload.length; i++){\n    var keys = Object.keys(msg.payload[i]);\n    // keys.sort();\n    for(var j=0; j<keys.length; j++){\n        labels.push(msg.payload[i][keys[j]] + \" \" + keys[j]);\n        data.push(msg.payload[i][keys[j]]);\n    }\n}\n\nm.labels = labels;\nm.series = [\"Count\"];\nm.data = [data];\nmsg.payload = [m];\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 1043.86474609375,
        "y": 235.7394561767578,
        "wires": [
            [
                "8540823e.1aaa88"
            ]
        ]
    },
    {
        "id": "c92e3e4b.0b637",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "count by property",
        "func": "function sort(object){\n    if (typeof object != \"object\" || object instanceof Array) // Not to sort the array\n        return object;\n    var keys = Object.keys(object);\n    keys.sort();\n    var newObject = {};\n    for (var i = 0; i < keys.length; i++){\n        newObject[keys[i]] = sort(object[keys[i]])\n    }\n    return newObject;\n}\n\ncounter = {\n    \"closed\": 0,\n    \"for approval\": 0,\n    \"in progress\": 0,\n    \"open\": 0\n};\n\nfor(var i=0; i<msg.payload.length; i++){\n    var prop = String(msg.payload[i][msg.inputs.property]);\n    if(counter.hasOwnProperty(prop)){\n        counter[prop] += 1;\n    }else{\n        counter[prop] = 1;\n    }\n}\n\n// sorted = sort(counter);\n// msg.payload = [sorted];\nmsg.payload = [counter];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1041.517333984375,
        "y": 171.2394256591797,
        "wires": [
            [
                "4e46553.30febac"
            ]
        ]
    },
    {
        "id": "2bda6622.92a522",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "INPUTS",
        "func": "// INPUTS\n\nproperty = \"status\";\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.property = property;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1043.4608154296875,
        "y": 116.93290710449219,
        "wires": [
            [
                "c92e3e4b.0b637"
            ]
        ]
    },
    {
        "id": "8540823e.1aaa88",
        "type": "ui_chart",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "group": "273d39d2.3e58b6",
        "order": 2,
        "width": "6",
        "height": "4",
        "label": "By Status",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": false,
        "colors": [
            "#9b9b9b",
            "#008000",
            "#fdd842",
            "#ca0000",
            "#98df8a",
            "#ff8000",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1221.3785400390625,
        "y": 240.12835693359375,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "49bbf49f.70b34c",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "in current",
        "func": "// filter only issues from current model/federation\n\nresult = [];\n\nfor(var i=0; i<msg.payload.length; i++ ){\n    if(msg.payload[i].model === flow.get(\"modelID\")){\n        result.push(msg.payload[i]);\n    }\n}\n\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 743.9074096679688,
        "y": 222.101806640625,
        "wires": [
            [
                "2bda6622.92a522",
                "8977259d.dc0a48",
                "a6d8f54f.b1d058",
                "cfc68519.2898a8",
                "9267f6ae.0714b8",
                "27bf9cd4.212ecc"
            ]
        ]
    },
    {
        "id": "a440d538.c74978",
        "type": "ui_text",
        "z": "4661b4e5.ec84d4",
        "group": "40be3bb0.ae9f6c",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "# Overdue issues",
        "label": "Number of overdue issues",
        "format": "{{msg.payload.length}}",
        "layout": "row-left",
        "x": 1250.70361328125,
        "y": 672.0926513671875,
        "wires": []
    },
    {
        "id": "8977259d.dc0a48",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "by due date",
        "func": "counter = {};\nvar before = [];\nvar after = [];\n\nfor(var i=0; i<msg.payload.length; i++){\n    if(msg.payload[i].status != \"closed\"){\n        var due = msg.payload[i].due_date;\n        if(due > Date.now() || msg.payload[i].due_date === undefined){\n            before.push(msg.payload[i])\n        }else{\n            after.push(msg.payload[i])\n        }\n    }\n}\n\nreturn [{payload:before}, {payload:after}];",
        "outputs": 2,
        "noerr": 0,
        "x": 1045.596923828125,
        "y": 666.2101440429688,
        "wires": [
            [
                "4bb3b1e4.4453"
            ],
            [
                "a440d538.c74978",
                "2c3d6b79.d61d14"
            ]
        ],
        "outputLabels": [
            "before",
            "after"
        ]
    },
    {
        "id": "88efbd53.5f5c7",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "issues by due date",
        "info": "",
        "x": 1053.7684326171875,
        "y": 566.3333129882812,
        "wires": []
    },
    {
        "id": "cfc68519.2898a8",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "count by properties",
        "func": "var assigned = flow.get(\"assigned\");\nvar priority = flow.get(\"priority\");\nvar priorityLabel = flow.get(\"priorityLabel\");\n\ncounter = {};\n\nfor(var i=0; i<msg.payload.length; i++){\n    if(msg.payload[i].status !== \"closed\"){\n        for(var j=0; j<assigned.length; j++){\n            for(var k=0; k<priority.length; k++){\n                var prop = String(priorityLabel[k] + \"_\" + assigned[j]);\n                if(!counter.hasOwnProperty(prop)){\n                    counter[prop] = 0;\n                }\n                if(msg.payload[i].assigned_roles[0] === assigned[j] && msg.payload[i].priority === priority[k]){\n                    counter[prop] += 1;\n                }\n            }\n        }\n    }\n}\n\nmsg.payload = counter;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 533.0647583007812,
        "y": 493.20367431640625,
        "wires": [
            [
                "5c8fef88.99109"
            ]
        ]
    },
    {
        "id": "5c8fef88.99109",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "sort & format",
        "func": "var keys = Object.keys(msg.payload);\nvar assigned = flow.get(\"assigned\");\nvar m = {};\nvar data = [];\nvar dataFormated = [];\n\nkeys.sort();\n\nfor(var i in keys){\n    data.push(msg.payload[keys[i]])\n}\n\nfor(var i=0; i<data.length; i+=assigned.length){\n    dataFormated.push(data.slice(i,i+assigned.length));\n}\n\nassigned.pop();\nassigned.push(\"unassigned\");\n\nvar l = 10;\nvar assignFormated = [];\n\nfor(var i=0; i<assigned.length; i++){\n    if(assigned[i].length > l){\n        assignFormated.push(assigned[i].substring(0,l) + \"...\");\n    }else{\n        assignFormated.push(assigned[i])\n    }\n}\n    \nm.labels = assignFormated;\nm.series = flow.get(\"priority\");\nm.data = dataFormated;\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 540.6861572265625,
        "y": 547.2645263671875,
        "wires": [
            [
                "8d9f07d.64ae378"
            ]
        ]
    },
    {
        "id": "8d9f07d.64ae378",
        "type": "ui_chart",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "group": "3243c41a.026d74",
        "order": 1,
        "width": "16",
        "height": "4",
        "label": "By Job & Priority",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#9b9b9b",
            "#008000",
            "#fdd842",
            "#ca0000",
            "#98df8a",
            "#ff8000",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 762.7645874023438,
        "y": 547.116455078125,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e63450b0.3bbdf",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "simple counter",
        "info": "takes filter output, one or multiple revisions\n\nreturns quantities by metadata property",
        "x": 1048.3426513671875,
        "y": 300.98155212402344,
        "wires": []
    },
    {
        "id": "1d279534.900293",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "format",
        "func": "var data = [];\nvar labels = [];\nvar series = [];\nvar m = {};\n\nfor(var i=0; i<msg.payload.length; i++){\n    var keys = Object.keys(msg.payload[i]);\n    // keys.sort();\n    for(var j=0; j<keys.length; j++){\n        labels.push(msg.payload[i][keys[j]] + \" \" + keys[j]);\n        data.push(msg.payload[i][keys[j]]);\n    }\n}\n\nm.labels = labels;\nm.series = [\"Count\"];\nm.data = [data];\nmsg.payload = [m];\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 1056.225830078125,
        "y": 472.2672882080078,
        "wires": [
            [
                "c7cf8807.eeaff"
            ]
        ]
    },
    {
        "id": "1ebfef86.15fbc",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "count by property",
        "func": "function sort(object){\n    if (typeof object != \"object\" || object instanceof Array) // Not to sort the array\n        return object;\n    var keys = Object.keys(object);\n    keys.sort();\n    var newObject = {};\n    for (var i = 0; i < keys.length; i++){\n        newObject[keys[i]] = sort(object[keys[i]])\n    }\n    return newObject;\n}\n\ncounter = {\n    \"none\": 0,\n    \"low\": 0,\n    \"medium\": 0,\n    \"high\": 0\n};\n\nfor(var i=0; i<msg.payload.length; i++){\n    if(msg.payload[i].status !== \"closed\"){\n        var prop = String(msg.payload[i][msg.inputs.property]);\n        if(counter.hasOwnProperty(prop)){\n            counter[prop] += 1;\n        }else{\n            counter[prop] = 1;\n        }\n    }\n}\n\n// sorted = sort(counter);\n// msg.payload = [sorted];\nmsg.payload = [counter];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1053.87841796875,
        "y": 407.7672576904297,
        "wires": [
            [
                "1d279534.900293"
            ]
        ]
    },
    {
        "id": "a6d8f54f.b1d058",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "INPUTS",
        "func": "// INPUTS\n\nproperty = \"priority\";\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.property = property;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1055.8218994140625,
        "y": 353.4607391357422,
        "wires": [
            [
                "1ebfef86.15fbc"
            ]
        ]
    },
    {
        "id": "c7cf8807.eeaff",
        "type": "ui_chart",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "group": "273d39d2.3e58b6",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "By Priority",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": false,
        "colors": [
            "#9b9b9b",
            "#008000",
            "#fdd842",
            "#ca0000",
            "#98df8a",
            "#ff8000",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1243.7396240234375,
        "y": 476.65618896484375,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6da8098.e9e7df8",
        "type": "ui_template",
        "z": "4661b4e5.ec84d4",
        "group": "40be3bb0.ae9f6c",
        "name": "On Time Issues",
        "order": 1,
        "width": "22",
        "height": "2",
        "format": "<style>\n        td {\n            height: 30px;\n        }\n        \n    a:link {\n    color: black;\n    background-color: transparent;\n    text-decoration: none;\n}\na:visited {\n    color: black;\n    background-color: transparent;\n    text-decoration: none;\n}\na:hover {\n    color: gray;\n    background-color: transparent;\n    text-decoration: underline;\n}\n</style>\n\n<table style=\"width:100%\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td width=\"30%\"><b><a href=\"{{x.link}}\" target=\"_blank\">{{x.name}}</a></b></td>\n            <td width=\"10%\">{{x.priority}}</td>\n            <td width=\"10%\">{{x.status}}</td>\n            <td width=\"15%\">{{x.type}}</td>\n            <td width=\"20%\">{{x.assign}}</td>\n            <td width=\"15%\">{{x.date}}</td>\n\n        </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1224.036865234375,
        "y": 618.7592163085938,
        "wires": [
            []
        ]
    },
    {
        "id": "4bb3b1e4.4453",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "format",
        "func": "var result = []\n\nfor(var i=0; i<msg.payload.length; i++){\n    if (msg.payload[i] !== undefined) {\n        issue = {};\n        issue.name = msg.payload[i].name;\n        var convDate = new Date(msg.payload[i].due_date).toString().split(\" \");\n        var formDate = convDate[2] + \" \" + convDate[1];\n        issue.date = formDate;\n        issue.status = msg.payload[i].status;\n        issue.priority = msg.payload[i].priority;\n        issue.type = msg.payload[i].topic_type;\n        issue.assign = msg.payload[i].assigned_roles[0];\n        issue.link = \"https://www.3drepo.io/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/\" + \"issues\" + \"/\" + msg.payload[i]._id;\n        result.push(issue);\n    }\n}\n\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1057.640869140625,
        "y": 617.6062622070312,
        "wires": [
            [
                "6da8098.e9e7df8"
            ]
        ]
    },
    {
        "id": "9267f6ae.0714b8",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "flow variables",
        "func": "var owners = [];\nvar assigned = [];\npriority = [\"none\",\"low\",\"medium\",\"high\"];\npriorityLabel = [\"0_N\",\"1_L\",\"2_M\",\"3_H\"];\nstatus = [\"open\",\"in progress\",\"for approval\",\"closed\"];\nstatusLabel = [\"0_O\",\"1_IP\",\"2_FA\",\"3_C\"];\n\nfor (var i=0; i<msg.payload.length; i++){\n    owners.push(msg.payload[i].owner);\n    if(msg.payload[i].assigned_roles[0] !== null){\n        assigned.push(msg.payload[i].assigned_roles[0]);\n    }\n}\n\nvar ownersSet = new Set(owners);\nowners = Array.from(ownersSet);\n\nvar assignedSet = new Set(assigned);\nassigned = Array.from(assignedSet);\n// assigned.unshift(\"unassigned\");\nassigned.sort();\n\nflow.set(\"owners\",owners);\nflow.set(\"assigned\",assigned);\nflow.set(\"priority\",priority);\nflow.set(\"priorityLabel\",priorityLabel);\nflow.set(\"status\",status);\nflow.set(\"statusLabel\",statusLabel);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720.7036743164062,
        "y": 351.25921630859375,
        "wires": [
            []
        ]
    },
    {
        "id": "71934e38.3219f",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "issues by assigned & priority",
        "info": "",
        "x": 540.8517456054688,
        "y": 439.38885498046875,
        "wires": []
    },
    {
        "id": "27bf9cd4.212ecc",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "count by properties",
        "func": "var assigned = flow.get(\"assigned\");\nvar status = flow.get(\"status\");\nvar statusLabel = flow.get(\"statusLabel\");\n\ncounter = {};\n\nfor(var i=0; i<msg.payload.length; i++){\n    // if(msg.payload[i].status !== \"closed\"){\n        for(var j=0; j<assigned.length; j++){\n            for(var k=0; k<status.length; k++){\n                var prop = String(statusLabel[k] + \"_\" + assigned[j]);\n                if(!counter.hasOwnProperty(prop)){\n                    counter[prop] = 0;\n                }\n                if(msg.payload[i].assigned_roles[0] === assigned[j] && msg.payload[i].status === status[k]){\n                    counter[prop] += 1;\n                }\n            }\n        }\n    // }\n}\n\nmsg.payload = counter;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 527.6480712890625,
        "y": 698.75927734375,
        "wires": [
            [
                "c9ea01d4.6f0688"
            ]
        ]
    },
    {
        "id": "c9ea01d4.6f0688",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "sort & format",
        "func": "var keys = Object.keys(msg.payload);\nvar assigned = flow.get(\"assigned\");\nvar m = {};\nvar data = [];\nvar dataFormated = [];\n\nkeys.sort();\n\nfor(var i in keys){\n    data.push(msg.payload[keys[i]])\n}\n\nfor(var i=0; i<data.length; i+=assigned.length){\n    dataFormated.push(data.slice(i,i+assigned.length));\n}\n\nassigned.pop();\nassigned.push(\"unassigned\");\n\nvar l = 10;\nvar assignFormated = [];\n\nfor(var i=0; i<assigned.length; i++){\n    if(assigned[i].length > l){\n        assignFormated.push(assigned[i].substring(0,l) + \"...\");\n    }else{\n        assignFormated.push(assigned[i])\n    }\n}\n    \nm.labels = assignFormated;\nm.series = flow.get(\"priority\");\nm.data = dataFormated;\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 535.2694702148438,
        "y": 752.8201293945312,
        "wires": [
            [
                "3afb77c4.bb8458"
            ]
        ]
    },
    {
        "id": "3afb77c4.bb8458",
        "type": "ui_chart",
        "z": "4661b4e5.ec84d4",
        "name": "",
        "group": "3243c41a.026d74",
        "order": 1,
        "width": "16",
        "height": "4",
        "label": "By Job & Status",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#9b9b9b",
            "#008000",
            "#fdd842",
            "#ca0000",
            "#98df8a",
            "#ff8000",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 757.347900390625,
        "y": 752.6720581054688,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8936e496.4cbf98",
        "type": "comment",
        "z": "4661b4e5.ec84d4",
        "name": "issues by assigned & status",
        "info": "",
        "x": 535.43505859375,
        "y": 644.9444580078125,
        "wires": []
    },
    {
        "id": "2ed281ab.d3123e",
        "type": "ui_template",
        "z": "4661b4e5.ec84d4",
        "group": "40be3bb0.ae9f6c",
        "name": "Overdue Issues",
        "order": 3,
        "width": "22",
        "height": "2",
        "format": "<style>\n        td {\n            height: 30px;\n        }\n        \n    a:link {\n    color: black;\n    background-color: transparent;\n    text-decoration: none;\n}\na:visited {\n    color: black;\n    background-color: transparent;\n    text-decoration: none;\n}\na:hover {\n    color: gray;\n    background-color: transparent;\n    text-decoration: underline;\n}\n</style>\n\n<table style=\"width:100%\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td width=\"30%\"><b><a href=\"{{x.link}}\" target=\"_blank\">{{x.name}}</a></b></td>\n            <td width=\"10%\">{{x.priority}}</td>\n            <td width=\"10%\">{{x.status}}</td>\n            <td width=\"15%\">{{x.type}}</td>\n            <td width=\"20%\">{{x.assign}}</td>\n            <td width=\"15%\">{{x.date}}</td>\n\n        </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1237.6484375,
        "y": 716.537109375,
        "wires": [
            []
        ]
    },
    {
        "id": "2c3d6b79.d61d14",
        "type": "function",
        "z": "4661b4e5.ec84d4",
        "name": "format",
        "func": "var result = []\n\nfor(var i=0; i<msg.payload.length; i++){\n    if (msg.payload[i] !== undefined) {\n        issue = {};\n        issue.name = msg.payload[i].name;\n        var convDate = new Date(msg.payload[i].due_date).toString().split(\" \");\n        var formDate = convDate[2] + \" \" + convDate[1];\n        issue.date = formDate;\n        issue.status = msg.payload[i].status;\n        issue.priority = msg.payload[i].priority;\n        issue.type = msg.payload[i].topic_type;\n        issue.assign = msg.payload[i].assigned_roles[0];\n        issue.link = \"https://www.3drepo.io/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/\" + \"issues\" + \"/\" + msg.payload[i]._id;\n        result.push(issue);\n    }\n}\n\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1058.75927734375,
        "y": 715.4259643554688,
        "wires": [
            [
                "2ed281ab.d3123e"
            ]
        ]
    },
    {
        "id": "28e93976.ad5d3e",
        "type": "ui_group",
        "z": "",
        "name": "Log In",
        "tab": "1961bf57.b58d91",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "273d39d2.3e58b6",
        "type": "ui_group",
        "z": "",
        "name": "Issues",
        "tab": "77aefd9f.b57b04",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "40be3bb0.ae9f6c",
        "type": "ui_group",
        "z": "",
        "name": "By Due Date",
        "tab": "77aefd9f.b57b04",
        "order": 3,
        "disp": true,
        "width": "22",
        "collapse": false
    },
    {
        "id": "3243c41a.026d74",
        "type": "ui_group",
        "z": "",
        "name": "Number of Issues",
        "tab": "77aefd9f.b57b04",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "1961bf57.b58d91",
        "type": "ui_tab",
        "z": "",
        "name": "Log In",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "77aefd9f.b57b04",
        "type": "ui_tab",
        "z": "",
        "name": "Issues Report",
        "icon": "dashboard",
        "order": 1
    }
]