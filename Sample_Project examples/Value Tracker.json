[
    {
        "id": "c4e063e1.865788",
        "type": "tab",
        "label": "Value Tracker",
        "disabled": false,
        "info": "Track values of specified parameters in objects across revisions"
    },
    {
        "id": "a2c2fa92.7a0b3",
        "type": "inject",
        "z": "c4e063e1.865788",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 168.8750457763672,
        "y": 386.3750305175781,
        "wires": [
            [
                "a513a398.11c6e"
            ]
        ]
    },
    {
        "id": "a513a398.11c6e",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "MAIN INPUTS",
        "func": "// INPUTS\n\nteamspace = \"***\";  // make sure you have permissions to acces this teamspace\nmodelID = \"***\";    // make sure you have permissions to acces this model or federation\n\n// ignore the rest\n\ntry{\n    flow.set(\"teamspace\", teamspace);\n}catch(error){\n    node.error(\"Missing teamspace\", msg);\n    return;\n}\ntry{\n    flow.set(\"modelID\", modelID);\n}catch(error){\n    node.error(\"Missing modelID\", msg);\n    return;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 201.59153747558594,
        "y": 228.44223022460938,
        "wires": [
            [
                "8666391f.c81f08"
            ]
        ]
    },
    {
        "id": "cb77a440.ed39a8",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "revisions API",
        "func": "cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/\" + \"revisions.json\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 478.8750305175781,
        "y": 373.8750305175781,
        "wires": [
            [
                "f4c29bc9.e61ee8"
            ]
        ]
    },
    {
        "id": "f4c29bc9.e61ee8",
        "type": "http request",
        "z": "c4e063e1.865788",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "{{{payload}}}",
        "tls": "",
        "x": 478.8646240234375,
        "y": 423.35418033599854,
        "wires": [
            [
                "4adcbcd8.95be04"
            ]
        ]
    },
    {
        "id": "4adcbcd8.95be04",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "OUTPUTS",
        "func": "// all revisions\n\nflow.set(\"revisions\", msg.payload);\n\nreturn {payload:\"\"};\n\n\n// uncomment and specify subset of revisions below\n\n// flow.set(\"revisions\", msg.payload.slice(0,10));\n",
        "outputs": 1,
        "noerr": 0,
        "x": 489.87156677246094,
        "y": 472.09726428985596,
        "wires": [
            [
                "a369632f.351a1"
            ]
        ]
    },
    {
        "id": "f1fe1db8.486668",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "revisions",
        "info": "get all revisions of a model\n\nto choose only subset of revisions use:\nmsg.payload.slice(0,3)\n\nplace after login",
        "x": 481.1250305175781,
        "y": 327.35072326660156,
        "wires": []
    },
    {
        "id": "5abe8ca6.4e1f3c",
        "type": "http request",
        "z": "c4e063e1.865788",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "{{{topic}}}",
        "tls": "",
        "x": 473.36448669433594,
        "y": 164.111065864563,
        "wires": [
            [
                "d471d7e7.ff35"
            ]
        ]
    },
    {
        "id": "d471d7e7.ff35",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "cookie",
        "func": "var cookies = msg.responseCookies;\n\ntry{\n    cookies[\"connect.sid\"];\n}catch(error){\n    node.error(\"Invalid username or password\", msg);\n    return;\n}\n\nmsg.headers = {\n \"content-type\":\"application/json\",\n \"Cookie\": \"connect.sid=\" + cookies[\"connect.sid\"][\"value\"]\n};\n\nflow.set(\"cookie\",msg.headers[\"Cookie\"]);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 475.92015075683594,
        "y": 215.86298847198486,
        "wires": [
            [
                "cb77a440.ed39a8",
                "aa9aa780.ecc478"
            ]
        ]
    },
    {
        "id": "8666391f.c81f08",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "header",
        "func": "try{\n    test = global.get(\"username\")[0];\n}catch(error){\n    node.error(\"Login error - login at http://localhost:1880/ui/#/0\", msg);\n    return;\n}\ntry{\n    test = global.get(\"password\")[0];\n}catch(error){\n    node.error(\"Login error - login at http://localhost:1880/ui/#/0\", msg);\n    return;\n}\n\n\nmsg.payload = {\n \"username\": global.get(\"username\"), \n \"password\": global.get(\"password\")\n};\n\nmsg.topic = \"https://api1.www.3drepo.io/api/login\";\n\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 475.32472229003906,
        "y": 115.24895191192627,
        "wires": [
            [
                "5abe8ca6.4e1f3c"
            ]
        ]
    },
    {
        "id": "ba5dcfc3.e4b6d8",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "login",
        "info": "",
        "x": 477.23606872558594,
        "y": 68.32289600372314,
        "wires": []
    },
    {
        "id": "20501a0d.c73156",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "API call",
        "func": "cookie = flow.get(\"cookie\");\nvar calls = [];\n\nmsg.headers = {\n    \"content-type\": \"application/json\",\n    \"Cookie\": cookie\n};\n\nif(msg.inputs.allRev){\n    try{\n        var test = flow.get(\"revisions\").length;\n    }catch(error){\n        node.error(\"Missing revisions\", msg);\n        return;\n    }\n    for (var i = 0; i < flow.get(\"revisions\").length; i++) {\n        for (var prop in msg.inputs.filter) {\n            calls.push(\"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/\" + flow.get(\"revisions\")[i]._id + \"/meta/findObjsWith/\" + prop + \".json\");\n        }\n    }\n}else{\n    for (var prop in msg.inputs.filter) {\n        calls.push(\"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \"/revision/master/head/meta/findObjsWith/\" + prop + \".json\");\n    }\n}\n\nmsg.payload = calls;\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 805.1250305175781,
        "y": 161.37503051757812,
        "wires": [
            [
                "49dbeb68.12147c"
            ]
        ]
    },
    {
        "id": "49dbeb68.12147c",
        "type": "split",
        "z": "c4e063e1.865788",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 809.2701721191406,
        "y": 209.54769897460938,
        "wires": [
            [
                "20d40e13.f0f682"
            ]
        ]
    },
    {
        "id": "20d40e13.f0f682",
        "type": "http request",
        "z": "c4e063e1.865788",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "{{{payload}}}",
        "tls": "",
        "x": 801.8222961425781,
        "y": 261.5131378173828,
        "wires": [
            [
                "a01c2579.59f0e8"
            ]
        ]
    },
    {
        "id": "a01c2579.59f0e8",
        "type": "join",
        "z": "c4e063e1.865788",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "x": 805.5289611816406,
        "y": 309.89610290527344,
        "wires": [
            [
                "f4cf801a.49a25"
            ]
        ]
    },
    {
        "id": "b8cd079b.b0cd",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "merge",
        "func": "if(msg.inputs.allRev){\n    revisions = flow.get(\"revisions\");\n    merged = [];\n    \n    // partition API call results by revision\n    var rev = []\n    while (msg.payload.length > 0) {\n        rev.push(msg.payload.splice(0, Object.keys(msg.inputs.filter).length)); // this works\n    }\n\n    // get meta GUIDs, IFC GUIDs\n    for (var i = 0; i < rev.length; i++) {\n        merged[i] = [];\n        for (var j in rev[i][0][\"data\"]) {      // IfcGUID\n            for (var l = 1; l < rev[i].length; l++) {       // loop through filter\n                var property = Object.keys(msg.inputs.filter)[l];\n                var filter = msg.inputs.filter[Object.keys(msg.inputs.filter)[l]];\n                for (var k in rev[i][l][\"data\"]) {\n                    // if (rev[i][1][\"data\"][j] !== undefined && rev[i][0][\"data\"][j][\"_id\"] === rev[i][1][\"data\"][k][\"_id\"]) {\n                    if (rev[i][0][\"data\"][j][\"_id\"] === rev[i][l][\"data\"][k][\"_id\"]) {      // if meta IDs match create filtered object\n                        o = {};\n                        o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                        o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                        o.property = property;\n                        o.value = rev[i][l][\"data\"][k][\"metadata\"][\"value\"];\n                        o.timestamp = Date.parse(revisions[i].timestamp);\n                        o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                        o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                        merged[i].push(o)\n                    }\n                }\n            }\n        }\n    }\n    msg.payload = merged;\n    return msg;\n}else{\n    try{\n        var timestamp = Date.parse(flow.get(\"revisions\")[0].timestamp);\n    }catch(error){\n        node.error(\"Missing revisions\", msg);\n    return;\n    }\n    \n    merged = [];\n    \n    // partition API call results by revision\n    var rev = []\n    while (msg.payload.length > 0) {\n        rev.push(msg.payload.splice(0, Object.keys(msg.inputs.filter).length)); // this works\n    }\n    // node.send({payload:rev})\n    // get meta GUIDs, IFC GUIDs\n    for (var i = 0; i < rev.length; i++) {\n        merged[i] = [];\n        for (var j in rev[i][0][\"data\"]) {      // IfcGUID\n            for (var l = 1; l < rev[i].length; l++) {       // loop through filtered\n                var property = Object.keys(msg.inputs.filter)[l];\n                var filter = msg.inputs.filter[Object.keys(msg.inputs.filter)[l]];\n                for (var k in rev[i][l][\"data\"]) {\n                    var value = rev[i][l][\"data\"][k][\"metadata\"][\"value\"];\n                    \n                    // if (rev[i][1][\"data\"][j] !== undefined && rev[i][0][\"data\"][j][\"_id\"] === rev[i][1][\"data\"][k][\"_id\"]) {\n                    if (rev[i][0][\"data\"][j][\"_id\"] === rev[i][l][\"data\"][k][\"_id\"]) {      // if meta IDs match create filtered object\n                        \n                        if (filter.length === 0){\n                            o = {};\n                            o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                            o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                            o.property = property;\n                            o.value = value;\n                            o.timestamp = timestamp;\n                            o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                            o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                            merged[i].push(o)\n                        }else{\n                            if(filter[0] === true && value.search(filter[1]) > -1){\n                                o = {};\n                                o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                                o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                                o.property = property;\n                                o.value = value;\n                                o.timestamp = timestamp;\n                                o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                                o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                                merged[i].push(o);\n                            }else{\n                                // node.send({payload:value})\n                                for(var m=1; m<filter.length; m++){\n                                    if(filter[m] === value){\n                                    o = {};\n                                    o.metaID = rev[i][0][\"data\"][j][\"_id\"];\n                                    o.IFCGUID = rev[i][0][\"data\"][j][\"metadata\"][\"value\"];\n                                    o.property = property;\n                                    o.value = value;\n                                    o.timestamp = timestamp;\n                                    o.parents = rev[i][0][\"data\"][j][\"parents\"];\n                                    o.parents = rev[i][l][\"data\"][k][\"parents\"];        // ???\n                                    merged[i].push(o);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    msg.payload = merged;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 807.662841796875,
        "y": 409.51293182373047,
        "wires": [
            [
                "ced3fbde.7f9398",
                "c26d7190.0038a"
            ]
        ]
    },
    {
        "id": "dfd7d6f5.2c752",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "filter",
        "info": "keep Ifc GUID always as first item",
        "x": 800.6806335449219,
        "y": 70.263916015625,
        "wires": []
    },
    {
        "id": "f4cf801a.49a25",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "if fed (filters)",
        "func": "var o = [];\n\nfor (var i=0; i < msg.payload.length; i++) {\n    if (msg.payload[i] !== undefined) {\n        if (msg.payload[i].subModels !== undefined) {\n            var obj = {};\n            var temp = [];\n            for (var j = 0; j < msg.payload[i].subModels.length; j++) {\n                for (var k = 0; k < msg.payload[i].subModels[j].data.length; k++) {\n                    // merge data arrays as per API calls \n                    temp.push(msg.payload[i].subModels[j].data[k])\n                }\n            }\n            obj.data = temp;\n            o.push(obj);\n        } else {\n            return msg;\n        }\n    }\n}\n\nmsg.payload = o;\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 800.8197326660156,
        "y": 359.43053436279297,
        "wires": [
            [
                "b8cd079b.b0cd"
            ]
        ]
    },
    {
        "id": "a369632f.351a1",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "INPUTS",
        "func": "// INPUTS:\n\nfilter = {\n    // IfcGUID is a default value, keep always as first item. Use Item:GUID for models uploaded with Navis plugin\n    \"IFC%20GUID\": [], \n    // add custom filters below\n    \"AppearsIn\": []\n}\n\nallRevisions = true;\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.filter = filter;\nmsg.inputs.allRev = allRevisions;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 795.6435852050781,
        "y": 116.89358520507812,
        "wires": [
            [
                "20501a0d.c73156"
            ]
        ]
    },
    {
        "id": "ed5ffbd6.0487a8",
        "type": "ui_chart",
        "z": "c4e063e1.865788",
        "name": "Value Tracker",
        "group": "962cadde.6969a",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Value Tracker",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "step",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1121.3750305175781,
        "y": 195.12503051757812,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e0c517d1.60294",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "format",
        "func": "m = {};\ndata = [];\n\nfor(var k=0; k<msg.inputs.trackIDs.length; k++){\n    data[k] = [];\n    for(var i=0; i<msg.payload.length; i++){    // revisions\n        for(var j=0; j<msg.payload[i].length; j++){     // results in revision\n            if(msg.payload[i][j] !== undefined){\n                if(msg.payload[i][j].IFCGUID == msg.inputs.trackIDs[k]){   // set trackIDs in INPUT node\n                    o = {};\n                    o.x = msg.payload[i][j].timestamp;\n                    var value = msg.payload[i][j].value;\n                    if(typeof value === \"string\"){\n                        o.y = value.match(/^(\\d+(?:\\.\\d+)?)(.*)$/)[1];\n                    }else{\n                        o.y = value;\n                    }\n                    data[k].push(o);\n                }\n            }\n        }\n    }\n}\n\nm.labels = [\"a\"];\nm.series = msg.inputs.trackIDs;\nm.data = data;\n\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 1110.2638176812065,
        "y": 147.34731123182507,
        "wires": [
            [
                "ed5ffbd6.0487a8"
            ]
        ]
    },
    {
        "id": "c5f4d4ef.fdf508",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "value tracker",
        "info": "set tracker on model not federation\n\nfilter has only 2 inputs:\n- IFC GUID\n- required metadata field\n- all revisions enabled",
        "x": 1108.8353508843315,
        "y": 70.20450422498914,
        "wires": []
    },
    {
        "id": "ced3fbde.7f9398",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "INPUTS",
        "func": "// INPUTS\n\ntrackIDs = [\"0yz09RJdZrJRJpC8cc3jlN\", \"3Gf4orC9vFIfzriagMaOu1\"];  // add objects you want to track\n\n\n// ignore the rest\n\nmsg.inputs = {};\nmsg.inputs.trackIDs = trackIDs;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1111.7795028686523,
        "y": 105.16285705566406,
        "wires": [
            [
                "e0c517d1.60294"
            ]
        ]
    },
    {
        "id": "718f9fbe.f4dcf8",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "teamspace",
        "func": "msg.payload = flow.get(\"teamspace\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 631.375,
        "y": 720.6249389648438,
        "wires": [
            [
                "482c7cdd.d47afc"
            ]
        ]
    },
    {
        "id": "8fc0b262.d003b",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "revisions",
        "func": "revisions = flow.get(\"revisions\");\ntags = [];\n\ntry{\n    test = revisions.length;\n}catch(error){\n    node.error(\"Missing revisions\", msg);\n    return;\n}\n\nfor(var i=0; i<revisions.length; i++){\n    if(revisions[i] !== undefined){\n        if(revisions[i].tag !== undefined){\n            tags.push(revisions[i].tag);\n        }else{\n            tags.push(String(String(revisions[i].timestamp).split(\".\")[0]).replace(\"T\", \" \"));\n        }\n    }\n}\n\nmsg.payload = tags;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 632.5595703125,
        "y": 770.3991088867188,
        "wires": [
            [
                "dc34d5bc.846268"
            ]
        ]
    },
    {
        "id": "fd64e372.16cc28",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "model settings",
        "func": "cookie = flow.get(\"cookie\");\n\nmsg.headers = {\n    \"content-type\":\"application/json\",\n    \"Cookie\": cookie\n};\n\nmsg.payload = \"https://api1.www.3drepo.io/api/\" + flow.get(\"teamspace\") + \"/\" + flow.get(\"modelID\") + \".json\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 447.625186920166,
        "y": 769.377076625824,
        "wires": [
            [
                "3e7aa841.16bea"
            ]
        ]
    },
    {
        "id": "3e7aa841.16bea",
        "type": "http request",
        "z": "c4e063e1.865788",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "{{{payload}}}",
        "tls": "",
        "x": 447.620849609375,
        "y": 823.0684509277344,
        "wires": [
            [
                "98a8666.1b9f018"
            ]
        ]
    },
    {
        "id": "98a8666.1b9f018",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "name",
        "func": "if(msg.payload.name){\n    msg.name = msg.payload.name;\n}else{\n    msg.name = \"NOT AUTHORISED\";\n}\n\nif(msg.payload.federate === true){\n    msg.type = \"federation: \";\n}else{\n    msg.type = \"model: \";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 631.3687744140625,
        "y": 818.1249084472656,
        "wires": [
            [
                "2d10546c.a60b44"
            ]
        ]
    },
    {
        "id": "aa9aa780.ecc478",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "---",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 415.125,
        "y": 713.1249389648438,
        "wires": [
            [
                "fd64e372.16cc28",
                "718f9fbe.f4dcf8",
                "8fc0b262.d003b"
            ]
        ]
    },
    {
        "id": "2d10546c.a60b44",
        "type": "ui_text",
        "z": "c4e063e1.865788",
        "group": "c0b2f64.d519f88",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "model",
        "label": "{{msg.type}}",
        "format": "{{msg.name}}",
        "layout": "row-left",
        "x": 817.0043144226074,
        "y": 721.4789190292358,
        "wires": []
    },
    {
        "id": "482c7cdd.d47afc",
        "type": "ui_text",
        "z": "c4e063e1.865788",
        "group": "c0b2f64.d519f88",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "teamspace:  ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 815.8194580078125,
        "y": 775.4546813964844,
        "wires": []
    },
    {
        "id": "d2c19661.a2edc8",
        "type": "ui_text",
        "z": "c4e063e1.865788",
        "group": "c0b2f64.d519f88",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "properties:  ",
        "format": "",
        "layout": "row-left",
        "x": 823.8194580078125,
        "y": 869.4546813964846,
        "wires": []
    },
    {
        "id": "f934a260.2461c",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "details",
        "info": "",
        "x": 615.7192993164062,
        "y": 657.5331420898435,
        "wires": []
    },
    {
        "id": "dc34d5bc.846268",
        "type": "ui_template",
        "z": "c4e063e1.865788",
        "group": "c0b2f64.d519f88",
        "name": "revisions",
        "order": 7,
        "width": "5",
        "height": "3",
        "format": "<table style=\"width:100%\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td><b>{{x}}</b></td>\n        </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 813.1749267578125,
        "y": 817.722229003906,
        "wires": [
            []
        ]
    },
    {
        "id": "1613777e.c7ea11",
        "type": "ui_text",
        "z": "c4e063e1.865788",
        "group": "c0b2f64.d519f88",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "revisions:",
        "format": "",
        "layout": "row-left",
        "x": 810.95263671875,
        "y": 908.8331909179688,
        "wires": []
    },
    {
        "id": "982348b6.de92f",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "how to",
        "info": "log in at http://localhost:1880/ui/#/0 or http://yourVPS:1880/ui/#/0\nset your teamspace and model ID of Lego_House_Architecture in MAIN INPUTS\ndeploy\ngo to http://localhost:1880/ui/#/1 or http://youtVPS:1880/ui/#/1 to see the results",
        "x": 178.87501525878906,
        "y": 100.125,
        "wires": []
    },
    {
        "id": "c26d7190.0038a",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "filter property",
        "func": "a = Object.keys(msg.inputs.filter);\na.shift();\nmsg.payload = a;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 813.875,
        "y": 593.8125,
        "wires": [
            [
                "c75ae4af.65444"
            ]
        ]
    },
    {
        "id": "c75ae4af.65444",
        "type": "ui_template",
        "z": "c4e063e1.865788",
        "group": "c0b2f64.d519f88",
        "name": "properties",
        "order": 4,
        "width": "5",
        "height": "3",
        "format": "<table style=\"width:100%\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td><b>{{x}}</b></td>\n        </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 991.375,
        "y": 592.8125610351562,
        "wires": [
            []
        ]
    },
    {
        "id": "cd9efe51.54bfe8",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "display filtered",
        "info": "",
        "x": 815.4945068359375,
        "y": 553.1190414428711,
        "wires": []
    },
    {
        "id": "1e3324ad.75fdab",
        "type": "ui_text_input",
        "z": "c4e063e1.865788",
        "name": "",
        "label": "Username",
        "group": "e795e370.c27e1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "20",
        "topic": "",
        "x": 160.00003051757812,
        "y": 717.77783203125,
        "wires": [
            [
                "d7e1d64f.a3c9c"
            ]
        ]
    },
    {
        "id": "99f7880a.6d257",
        "type": "ui_text_input",
        "z": "c4e063e1.865788",
        "name": "",
        "label": "Password",
        "group": "e795e370.c27e1",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "20",
        "topic": "",
        "x": 159.0277099609375,
        "y": 804.1711044311523,
        "wires": [
            [
                "29bc1ada.388926"
            ]
        ]
    },
    {
        "id": "d7e1d64f.a3c9c",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "username",
        "func": "global.set(\"username\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 163.75,
        "y": 761.8099517822266,
        "wires": [
            []
        ]
    },
    {
        "id": "29bc1ada.388926",
        "type": "function",
        "z": "c4e063e1.865788",
        "name": "password",
        "func": "global.set(\"password\",msg.payload);\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 157.08767700195312,
        "y": 845.8290939331055,
        "wires": [
            []
        ]
    },
    {
        "id": "38ec1561.3344ca",
        "type": "comment",
        "z": "c4e063e1.865788",
        "name": "login details",
        "info": "input your login details in dashboard at\n\nhttp://localhost:1880/ui/#/0\n\nset as global variable hence use only once for multiple flows",
        "x": 155.66668701171875,
        "y": 667.4074401855469,
        "wires": []
    },
    {
        "id": "962cadde.6969a",
        "type": "ui_group",
        "z": "",
        "name": "Results",
        "tab": "696896d9.995138",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "c0b2f64.d519f88",
        "type": "ui_group",
        "z": "",
        "name": "Details",
        "tab": "696896d9.995138",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "e795e370.c27e1",
        "type": "ui_group",
        "z": "",
        "name": "Log In",
        "tab": "1d13cc44.631fdc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "696896d9.995138",
        "type": "ui_tab",
        "z": "",
        "name": "Value Tracker",
        "icon": "dashboard",
        "order": 11
    },
    {
        "id": "1d13cc44.631fdc",
        "type": "ui_tab",
        "z": "",
        "name": "Log In",
        "icon": "dashboard",
        "order": 1
    }
]